0 info it worked if it ends with ok
1 verbose cli [ 'C:\\Program Files\\nodejs\\\\node.exe',
1 verbose cli   'C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js',
1 verbose cli   'install',
1 verbose cli   '-g',
1 verbose cli   'css2stylus' ]
2 info using npm@1.4.23
3 info using node@v0.10.31
4 verbose node symlink C:\Program Files\nodejs\\node.exe
5 verbose cache add [ 'css2stylus', null ]
6 verbose cache add name=undefined spec="css2stylus" args=["css2stylus",null]
7 verbose parsed url { protocol: null,
7 verbose parsed url   slashes: null,
7 verbose parsed url   auth: null,
7 verbose parsed url   host: null,
7 verbose parsed url   port: null,
7 verbose parsed url   hostname: null,
7 verbose parsed url   hash: null,
7 verbose parsed url   search: null,
7 verbose parsed url   query: null,
7 verbose parsed url   pathname: 'css2stylus',
7 verbose parsed url   path: 'css2stylus',
7 verbose parsed url   href: 'css2stylus' }
8 silly lockFile e7437f6f-css2stylus css2stylus
9 verbose lock css2stylus C:\Users\Administrador\AppData\Roaming\npm-cache\e7437f6f-css2stylus.lock
10 silly lockFile e7437f6f-css2stylus css2stylus
11 silly lockFile e7437f6f-css2stylus css2stylus
12 verbose addNamed [ 'css2stylus', '' ]
13 verbose addNamed [ null, '*' ]
14 silly lockFile b0374d1f-css2stylus css2stylus@
15 verbose lock css2stylus@ C:\Users\Administrador\AppData\Roaming\npm-cache\b0374d1f-css2stylus.lock
16 silly addNameRange { name: 'css2stylus', range: '*', hasData: false }
17 verbose request where is /css2stylus
18 verbose request registry https://registry.npmjs.org/
19 verbose request id ae24c53896b08ed4
20 verbose url raw /css2stylus
21 verbose url resolving [ 'https://registry.npmjs.org/', './css2stylus' ]
22 verbose url resolved https://registry.npmjs.org/css2stylus
23 verbose request where is https://registry.npmjs.org/css2stylus
24 info trying registry request attempt 1 at 19:25:18
25 http GET https://registry.npmjs.org/css2stylus
26 http 200 https://registry.npmjs.org/css2stylus
27 silly registry.get cb [ 200,
27 silly registry.get   { date: 'Thu, 28 Aug 2014 01:25:05 GMT',
27 silly registry.get     server: 'CouchDB/1.5.0 (Erlang OTP/R16B03)',
27 silly registry.get     etag: '"CGVC8X4UEIMJNURLB55UKBKH3"',
27 silly registry.get     'content-type': 'application/json',
27 silly registry.get     'cache-control': 'max-age=60',
27 silly registry.get     'content-length': '9337',
27 silly registry.get     'accept-ranges': 'bytes',
27 silly registry.get     via: '1.1 varnish',
27 silly registry.get     age: '0',
27 silly registry.get     'x-served-by': 'cache-iad2120-IAD',
27 silly registry.get     'x-cache': 'MISS',
27 silly registry.get     'x-cache-hits': '0',
27 silly registry.get     'x-timer': 'S1409189105.879853,VS0,VE59',
27 silly registry.get     vary: 'Accept',
27 silly registry.get     'keep-alive': 'timeout=10, max=50',
27 silly registry.get     connection: 'Keep-Alive' } ]
28 silly addNameRange number 2 { name: 'css2stylus', range: '*', hasData: true }
29 silly addNameRange versions [ 'css2stylus',
29 silly addNameRange   [ '0.0.1', '0.1.0', '0.1.1', '0.1.2', '0.1.3', '0.1.4' ] ]
30 verbose addNamed [ 'css2stylus', '0.1.4' ]
31 verbose addNamed [ '0.1.4', '0.1.4' ]
32 silly lockFile 2b6db2e1-css2stylus-0-1-4 css2stylus@0.1.4
33 verbose lock css2stylus@0.1.4 C:\Users\Administrador\AppData\Roaming\npm-cache\2b6db2e1-css2stylus-0-1-4.lock
34 silly lockFile 66b5e1e6--css2stylus-css2stylus-0-1-4-tgz https://registry.npmjs.org/css2stylus/-/css2stylus-0.1.4.tgz
35 verbose lock https://registry.npmjs.org/css2stylus/-/css2stylus-0.1.4.tgz C:\Users\Administrador\AppData\Roaming\npm-cache\66b5e1e6--css2stylus-css2stylus-0-1-4-tgz.lock
36 verbose addRemoteTarball [ 'https://registry.npmjs.org/css2stylus/-/css2stylus-0.1.4.tgz',
36 verbose addRemoteTarball   '0e6222e8ce18ca64b9a87f7b5fccdd02d2aee5ba' ]
37 info retry fetch attempt 1 at 19:25:27
38 verbose fetch to= C:\Users\ADMINI~1\AppData\Local\Temp\npm-6424-6TJQDlnt\registry.npmjs.org\css2stylus\-\css2stylus-0.1.4.tgz
39 http GET https://registry.npmjs.org/css2stylus/-/css2stylus-0.1.4.tgz
40 http 200 https://registry.npmjs.org/css2stylus/-/css2stylus-0.1.4.tgz
41 silly lockFile 66b5e1e6--css2stylus-css2stylus-0-1-4-tgz https://registry.npmjs.org/css2stylus/-/css2stylus-0.1.4.tgz
42 silly lockFile 66b5e1e6--css2stylus-css2stylus-0-1-4-tgz https://registry.npmjs.org/css2stylus/-/css2stylus-0.1.4.tgz
43 silly lockFile 2b6db2e1-css2stylus-0-1-4 css2stylus@0.1.4
44 silly lockFile 2b6db2e1-css2stylus-0-1-4 css2stylus@0.1.4
45 silly lockFile b0374d1f-css2stylus css2stylus@
46 silly lockFile b0374d1f-css2stylus css2stylus@
47 silly resolved [ { name: 'css2stylus',
47 silly resolved     description: 'Converts CSS to Stylus.',
47 silly resolved     version: '0.1.4',
47 silly resolved     author: { name: 'Denis Ciccale', url: '@tdecs' },
47 silly resolved     homepage: 'http://css2stylus.com',
47 silly resolved     repository:
47 silly resolved      { type: 'git',
47 silly resolved        url: 'https://github.com/dciccale/css2stylus.js.git' },
47 silly resolved     bugs: { url: 'http://github.com/dciccale/css2stylus.js/issues' },
47 silly resolved     licenses: [ [Object] ],
47 silly resolved     main: './lib/css2stylus',
47 silly resolved     bin: { css2stylus: './bin/css2stylus' },
47 silly resolved     preferGlobal: 'true',
47 silly resolved     dependencies: { yargs: '^1.2.2' },
47 silly resolved     devDependencies: {},
47 silly resolved     keywords: [ 'css2stylus', 'css', 'stylus', 'converter' ],
47 silly resolved     engines: [ 'node >= 0.6.0' ],
47 silly resolved     _id: 'css2stylus@0.1.4',
47 silly resolved     dist:
47 silly resolved      { shasum: '0e6222e8ce18ca64b9a87f7b5fccdd02d2aee5ba',
47 silly resolved        tarball: 'http://registry.npmjs.org/css2stylus/-/css2stylus-0.1.4.tgz' },
47 silly resolved     _from: 'css2stylus@',
47 silly resolved     _npmVersion: '1.3.24',
47 silly resolved     _npmUser: { name: 'denis', email: 'dciccale@gmail.com' },
47 silly resolved     maintainers: [ [Object] ],
47 silly resolved     directories: {},
47 silly resolved     _shasum: '0e6222e8ce18ca64b9a87f7b5fccdd02d2aee5ba',
47 silly resolved     _resolved: 'https://registry.npmjs.org/css2stylus/-/css2stylus-0.1.4.tgz' } ]
48 info install css2stylus@0.1.4 into C:\Users\Administrador\AppData\Roaming\npm
49 info installOne css2stylus@0.1.4
50 verbose node_modules\css2stylus unbuild
51 verbose tar unpack C:\Users\Administrador\AppData\Roaming\npm-cache\css2stylus\0.1.4\package.tgz
52 silly lockFile e5b1ece0-ming-npm-node-modules-css2stylus tar://C:\Users\Administrador\AppData\Roaming\npm\node_modules\css2stylus
53 verbose lock tar://C:\Users\Administrador\AppData\Roaming\npm\node_modules\css2stylus C:\Users\Administrador\AppData\Roaming\npm-cache\e5b1ece0-ming-npm-node-modules-css2stylus.lock
54 silly lockFile 0e4d3906-che-css2stylus-0-1-4-package-tgz tar://C:\Users\Administrador\AppData\Roaming\npm-cache\css2stylus\0.1.4\package.tgz
55 verbose lock tar://C:\Users\Administrador\AppData\Roaming\npm-cache\css2stylus\0.1.4\package.tgz C:\Users\Administrador\AppData\Roaming\npm-cache\0e4d3906-che-css2stylus-0-1-4-package-tgz.lock
56 silly gunzTarPerm modes [ '777', '666' ]
57 silly gunzTarPerm extractEntry package.json
58 silly gunzTarPerm modified mode [ 'package.json', 420, 438 ]
59 silly gunzTarPerm extractEntry .npmignore
60 silly gunzTarPerm modified mode [ '.npmignore', 420, 438 ]
61 silly gunzTarPerm extractEntry README.md
62 silly gunzTarPerm modified mode [ 'README.md', 420, 438 ]
63 silly gunzTarPerm extractEntry LICENSE.txt
64 silly gunzTarPerm modified mode [ 'LICENSE.txt', 420, 438 ]
65 silly gunzTarPerm extractEntry bin/css2stylus
66 silly gunzTarPerm modified mode [ 'bin/css2stylus', 493, 511 ]
67 silly gunzTarPerm extractEntry lib/css2stylus.js
68 silly gunzTarPerm modified mode [ 'lib/css2stylus.js', 420, 438 ]
69 silly lockFile e5b1ece0-ming-npm-node-modules-css2stylus tar://C:\Users\Administrador\AppData\Roaming\npm\node_modules\css2stylus
70 silly lockFile e5b1ece0-ming-npm-node-modules-css2stylus tar://C:\Users\Administrador\AppData\Roaming\npm\node_modules\css2stylus
71 silly lockFile 0e4d3906-che-css2stylus-0-1-4-package-tgz tar://C:\Users\Administrador\AppData\Roaming\npm-cache\css2stylus\0.1.4\package.tgz
72 silly lockFile 0e4d3906-che-css2stylus-0-1-4-package-tgz tar://C:\Users\Administrador\AppData\Roaming\npm-cache\css2stylus\0.1.4\package.tgz
73 info preinstall css2stylus@0.1.4
74 verbose readDependencies using package.json deps
75 verbose readDependencies using package.json deps
76 verbose cache add [ 'yargs@^1.2.2', null ]
77 verbose cache add name=undefined spec="yargs@^1.2.2" args=["yargs@^1.2.2",null]
78 verbose parsed url { protocol: null,
78 verbose parsed url   slashes: null,
78 verbose parsed url   auth: null,
78 verbose parsed url   host: null,
78 verbose parsed url   port: null,
78 verbose parsed url   hostname: null,
78 verbose parsed url   hash: null,
78 verbose parsed url   search: null,
78 verbose parsed url   query: null,
78 verbose parsed url   pathname: 'yargs@^1.2.2',
78 verbose parsed url   path: 'yargs@^1.2.2',
78 verbose parsed url   href: 'yargs@^1.2.2' }
79 verbose cache add name="yargs" spec="^1.2.2" args=["yargs","^1.2.2"]
80 verbose parsed url { protocol: null,
80 verbose parsed url   slashes: null,
80 verbose parsed url   auth: null,
80 verbose parsed url   host: null,
80 verbose parsed url   port: null,
80 verbose parsed url   hostname: null,
80 verbose parsed url   hash: null,
80 verbose parsed url   search: null,
80 verbose parsed url   query: null,
80 verbose parsed url   pathname: '^1.2.2',
80 verbose parsed url   path: '^1.2.2',
80 verbose parsed url   href: '^1.2.2' }
81 verbose addNamed [ 'yargs', '^1.2.2' ]
82 verbose addNamed [ null, '>=1.2.2-0 <2.0.0-0' ]
83 silly lockFile ab25150e-yargs-1-2-2 yargs@^1.2.2
84 verbose lock yargs@^1.2.2 C:\Users\Administrador\AppData\Roaming\npm-cache\ab25150e-yargs-1-2-2.lock
85 silly addNameRange { name: 'yargs', range: '>=1.2.2-0 <2.0.0-0', hasData: false }
86 verbose request where is /yargs
87 verbose request registry https://registry.npmjs.org/
88 verbose url raw /yargs
89 verbose url resolving [ 'https://registry.npmjs.org/', './yargs' ]
90 verbose url resolved https://registry.npmjs.org/yargs
91 verbose request where is https://registry.npmjs.org/yargs
92 info trying registry request attempt 1 at 19:25:28
93 http GET https://registry.npmjs.org/yargs
94 http 200 https://registry.npmjs.org/yargs
95 verbose bad json {"_id":"yargs","_rev":"63-6efb8a404039b2a96f2b82342fa4c261","name":"yargs","description":"Light-weight option parsing with an argv hash. No optstrings attached.","dist-tags":{"latest":"1.3.1"},"versions":{"1.0.0":{"name":"yargs","version":"1.0.0","description":"Light-weight option parsing with an argv hash. No optstrings attached.","main":"./index.js","dependencies":{"minimist":"~0.0.1"},"devDependencies":{"hashish":"~0.0.4","tap":"~0.4.0"},"scripts":{"test":"tap ./test/*.js"},"repository":{"type":"git","url":"http://github.com/chevex/yargs.git"},"keywords":["argument","args","option","parser","parsing","cli","command"],"author":{"name":"Alex Ford","email":"Alex.Ford@CodeTunnel.com","url":"forked from James Halliday"},"license":"MIT/X11","engine":{"node":">=0.4"},"bugs":{"url":"https://github.com/chevex/yargs/issues"},"homepage":"https://github.com/chevex/yargs","_id":"yargs@1.0.0","dist":{"shasum":"28eec7c0b14eda55aa0d0ff38c9e98f58782387c","tarball":"http://registry.npmjs.org/yargs/-/yargs-1.0.0.tgz"},"_from":".","_npmVersion":"1.3.14","_npmUser":{"name":"chevex","email":"alex.ford@codetunnel.com"},"maintainers":[{"name":"chevex","email":"alex.ford@codetunnel.com"}],"directories":{}},"1.0.1":{"name":"yargs","version":"1.0.1","description":"Light-weight option parsing with an argv hash. No optstrings attached.","main":"./index.js","dependencies":{"minimist":"~0.0.1"},"devDependencies":{"hashish":"~0.0.4","tap":"~0.4.0"},"scripts":{"test":"tap ./test/*.js"},"repository":{"type":"git","url":"http://github.com/chevex/yargs.git"},"keywords":["argument","args","option","parser","parsing","cli","command"],"author":{"name":"Alex Ford","email":"Alex.Ford@CodeTunnel.com","url":"forked from James Halliday"},"license":"MIT/X11","engine":{"node":">=0.4"},"bugs":{"url":"https://github.com/chevex/yargs/issues"},"homepage":"https://github.com/chevex/yargs","_id":"yargs@1.0.1","dist":{"shasum":"95172f9cda36f25ab427c4330b6e249bd5a6b22d","tarball":"http://registry.npmjs.org/yargs/-/yargs-1.0.1.tgz"},"_from":".","_npmVersion":"1.3.14","_npmUser":{"name":"chevex","email":"alex.ford@codetunnel.com"},"maintainers":[{"name":"chevex","email":"alex.ford@codetunnel.com"}],"directories":{}},"1.0.3":{"name":"yargs","version":"1.0.3","description":"Light-weight option parsing with an argv hash. No optstrings attached.","main":"./index.js","dependencies":{"minimist":"~0.0.1"},"devDependencies":{"hashish":"~0.0.4","tap":"~0.4.0"},"scripts":{"test":"tap ./test/*.js"},"repository":{"type":"git","url":"http://github.com/chevex/yargs.git"},"keywords":["argument","args","option","parser","parsing","cli","command"],"author":{"name":"Alex Ford","email":"Alex.Ford@CodeTunnel.com","url":"forked from James Halliday"},"license":"MIT/X11","engine":{"node":">=0.4"},"bugs":{"url":"https://github.com/chevex/yargs/issues"},"homepage":"https://github.com/chevex/yargs","_id":"yargs@1.0.3","dist":{"shasum":"571d21320c79ee2f8f81bea63b045d12e092a21b","tarball":"http://registry.npmjs.org/yargs/-/yargs-1.0.3.tgz"},"_from":".","_npmVersion":"1.3.14","_npmUser":{"name":"chevex","email":"alex.ford@codetunnel.com"},"maintainers":[{"name":"chevex","email":"alex.ford@codetunnel.com"}],"directories":{}},"1.0.4":{"name":"yargs","version":"1.0.4","description":"Light-weight option parsing with an argv hash. No optstrings attached.","main":"./index.js","dependencies":{"minimist":"~0.0.1"},"devDependencies":{"hashish":"~0.0.4","tap":"~0.4.0"},"scripts":{"test":"tap ./test/*.js"},"repository":{"type":"git","url":"http://github.com/chevex/yargs.git"},"keywords":["argument","args","option","parser","parsing","cli","command"],"author":{"name":"Alex Ford","email":"Alex.Ford@CodeTunnel.com","url":"forked from James Halliday"},"license":"MIT/X11","engine":{"node":">=0.4"},"bugs":{"url":"https://github.com/chevex/yargs/issues"},"homepage":"https://github.com/chevex/yargs","_id":"yargs@1.0.4","dist":{"shasum":"27c43bd2806141148224698c5f404fecae4bca98","tarball":"http://registry.npmjs.org/yargs/-/yargs-1.0.4.tgz"},"_from":".","_npmVersion":"1.3.14","_npmUser":{"name":"chevex","email":"alex.ford@codetunnel.com"},"maintainers":[{"name":"chevex","email":"alex.ford@codetunnel.com"}],"directories":{}},"1.0.5":{"name":"yargs","version":"1.0.5","description":"Light-weight option parsing with an argv hash. No optstrings attached.","main":"./index.js","dependencies":{"minimist":"~0.0.1"},"devDependencies":{"hashish":"~0.0.4","tap":"~0.4.0"},"scripts":{"test":"tap ./test/*.js"},"repository":{"type":"git","url":"http://github.com/chevex/yargs.git"},"keywords":["argument","args","option","parser","parsing","cli","command"],"author":{"name":"Alex Ford","email":"Alex.Ford@CodeTunnel.com","url":"forked from James Halliday"},"license":"MIT/X11","engine":{"node":">=0.4"},"bugs":{"url":"https://github.com/chevex/yargs/issues"},"homepage":"https://github.com/chevex/yargs","_id":"yargs@1.0.5","dist":{"shasum":"b5e25592d93554bc02516eaea92e66a4b5a3b793","tarball":"http://registry.npmjs.org/yargs/-/yargs-1.0.5.tgz"},"_from":".","_npmVersion":"1.3.14","_npmUser":{"name":"chevex","email":"alex.ford@codetunnel.com"},"maintainers":[{"name":"chevex","email":"alex.ford@codetunnel.com"}],"directories":{}},"1.0.6":{"name":"yargs","version":"1.0.6","description":"Light-weight option parsing with an argv hash. No optstrings attached.","main":"./index.js","dependencies":{"minimist":"~0.0.1"},"devDependencies":{"hashish":"~0.0.4","tap":"~0.4.0"},"scripts":{"test":"tap ./test/*.js"},"repository":{"type":"git","url":"http://github.com/chevex/yargs.git"},"keywords":["argument","args","option","parser","parsing","cli","command"],"author":{"name":"Alex Ford","email":"Alex.Ford@CodeTunnel.com","url":"forked from James Halliday"},"license":"MIT/X11","engine":{"node":">=0.4"},"bugs":{"url":"https://github.com/chevex/yargs/issues"},"homepage":"https://github.com/chevex/yargs","_id":"yargs@1.0.6","dist":{"shasum":"a5b4cbb81f0ad8586ce33ee1dfff956fb431fc2c","tarball":"http://registry.npmjs.org/yargs/-/yargs-1.0.6.tgz"},"_from":".","_npmVersion":"1.3.14","_npmUser":{"name":"chevex","email":"alex.ford@codetunnel.com"},"maintainers":[{"name":"chevex","email":"alex.ford@codetunnel.com"}],"directories":{}},"1.0.7":{"name":"yargs","version":"1.0.7","description":"Light-weight option parsing with an argv hash. No optstrings attached.","main":"./index.js","dependencies":{"minimist":"~0.0.1"},"devDependencies":{"hashish":"~0.0.4","tap":"~0.4.0"},"scripts":{"test":"tap ./test/*.js"},"repository":{"type":"git","url":"http://github.com/chevex/yargs.git"},"keywords":["argument","args","option","parser","parsing","cli","command"],"author":{"name":"Alex Ford","email":"Alex.Ford@CodeTunnel.com","url":"forked from James Halliday"},"license":"MIT/X11","engine":{"node":">=0.4"},"bugs":{"url":"https://github.com/chevex/yargs/issues"},"homepage":"https://github.com/chevex/yargs","_id":"yargs@1.0.7","dist":{"shasum":"0903eddecd3852654b0f6e0e9a4e1332c8c3cf4a","tarball":"http://registry.npmjs.org/yargs/-/yargs-1.0.7.tgz"},"_from":".","_npmVersion":"1.3.14","_npmUser":{"name":"chevex","email":"alex.ford@codetunnel.com"},"maintainers":[{"name":"chevex","email":"alex.ford@codetunnel.com"}],"directories":{}},"1.0.8":{"name":"yargs","version":"1.0.8","description":"Light-weight option parsing with an argv hash. No optstrings attached.","main":"./index.js","dependencies":{"minimist":"~0.0.1"},"devDependencies":{"hashish":"~0.0.4","tap":"~0.4.0"},"scripts":{"test":"tap ./test/*.js"},"repository":{"type":"git","url":"http://github.com/chevex/yargs.git"},"keywords":["argument","args","option","parser","parsing","cli","command"],"author":{"name":"Alex Ford","email":"Alex.Ford@CodeTunnel.com","url":"forked from James Halliday"},"license":"MIT/X11","engine":{"node":">=0.4"},"bugs":{"url":"https://github.com/chevex/yargs/issues"},"homepage":"https://github.com/chevex/yargs","_id":"yargs@1.0.8","dist":{"shasum":"9cc288de5c5fd30f10cfaf9db003bd4de485063c","tarball":"http://registry.npmjs.org/yargs/-/yargs-1.0.8.tgz"},"_from":".","_npmVersion":"1.3.14","_npmUser":{"name":"chevex","email":"alex.ford@codetunnel.com"},"maintainers":[{"name":"chevex","email":"alex.ford@codetunnel.com"}],"directories":{}},"1.0.9":{"name":"yargs","version":"1.0.9","description":"Light-weight option parsing with an argv hash. No optstrings attached.","main":"./index.js","dependencies":{"minimist":"~0.0.1"},"devDependencies":{"hashish":"~0.0.4","tap":"~0.4.0"},"scripts":{"test":"tap ./test/*.js"},"repository":{"type":"git","url":"http://github.com/chevex/yargs.git"},"keywords":["argument","args","option","parser","parsing","cli","command"],"author":{"name":"Alex Ford","email":"Alex.Ford@CodeTunnel.com","url":"forked from James Halliday"},"license":"MIT/X11","engine":{"node":">=0.4"},"bugs":{"url":"https://github.com/chevex/yargs/issues"},"homepage":"https://github.com/chevex/yargs","_id":"yargs@1.0.9","dist":{"shasum":"f48e3ee9279a4accaff7810ce127eed1fcc87377","tarball":"http://registry.npmjs.org/yargs/-/yargs-1.0.9.tgz"},"_from":".","_npmVersion":"1.3.15","_npmUser":{"name":"chevex","email":"alex.ford@codetunnel.com"},"maintainers":[{"name":"chevex","email":"alex.ford@codetunnel.com"}],"directories":{}},"1.0.10":{"name":"yargs","version":"1.0.10","description":"Light-weight option parsing with an argv hash. No optstrings attached.","main":"./index.js","dependencies":{"minimist":"~0.0.1"},"devDependencies":{"hashish":"~0.0.4","tap":"~0.4.0"},"scripts":{"test":"tap ./test/*.js"},"repository":{"type":"git","url":"http://github.com/chevex/yargs.git"},"keywords":["argument","args","option","parser","parsing","cli","command"],"author":{"name":"Alex Ford","email":"Alex.Ford@CodeTunnel.com","url":"forked from James Halliday"},"license":"MIT/X11","engine":{"node":">=0.4"},"bugs":{"url":"https://github.com/chevex/yargs/issues"},"homepage":"https://github.com/chevex/yargs","_id":"yargs@1.0.10","dist":{"shasum":"081f03b4a35fb33ba40d79f71feb7c5cfb6bcc2a","tarball":"http://registry.npmjs.org/yargs/-/yargs-1.0.10.tgz"},"_from":".","_npmVersion":"1.3.15","_npmUser":{"name":"chevex","email":"alex.ford@codetunnel.com"},"maintainers":[{"name":"chevex","email":"alex.ford@codetunnel.com"}],"directories":{}},"1.0.11":{"name":"yargs","version":"1.0.11","description":"Light-weight option parsing with an argv hash. No optstrings attached.","main":"./index.js","dependencies":{"minimist":"~0.0.1"},"devDependencies":{"hashish":"~0.0.4","tap":"~0.4.0"},"scripts":{"test":"tap ./test/*.js"},"repository":{"type":"git","url":"http://github.com/chevex/yargs.git"},"keywords":["argument","args","option","parser","parsing","cli","command"],"author":{"name":"Alex Ford","email":"Alex.Ford@CodeTunnel.com","url":"forked from James Halliday"},"license":"MIT/X11","engine":{"node":">=0.4"},"bugs":{"url":"https://github.com/chevex/yargs/issues"},"homepage":"https://github.com/chevex/yargs","_id":"yargs@1.0.11","dist":{"shasum":"673d261da3a0fb0fb6cb12e99ca9df4a0026b41c","tarball":"http://registry.npmjs.org/yargs/-/yargs-1.0.11.tgz"},"_from":".","_npmVersion":"1.3.15","_npmUser":{"name":"chevex","email":"alex.ford@codetunnel.com"},"maintainers":[{"name":"chevex","email":"alex.ford@codetunnel.com"}],"directories":{}},"1.0.12":{"name":"yargs","version":"1.0.12","description":"Light-weight option parsing with an argv hash. No optstrings attached.","main":"./index.js","dependencies":{"minimist":"~0.0.1"},"devDependencies":{"hashish":"~0.0.4","tap":"~0.4.0"},"scripts":{"test":"tap ./test/*.js"},"repository":{"type":"git","url":"http://github.com/chevex/yargs.git"},"keywords":["argument","args","option","parser","parsing","cli","command"],"author":{"name":"Alex Ford","email":"Alex.Ford@CodeTunnel.com","url":"forked from James Halliday"},"license":"MIT/X11","engine":{"node":">=0.4"},"bugs":{"url":"https://github.com/chevex/yargs/issues"},"homepage":"https://github.com/chevex/yargs","_id":"yargs@1.0.12","dist":{"shasum":"c1f396435efd86b17943f9b6160303dd1cf74a44","tarball":"http://registry.npmjs.org/yargs/-/yargs-1.0.12.tgz"},"_from":".","_npmVersion":"1.3.15","_npmUser":{"name":"chevex","email":"alex.ford@codetunnel.com"},"maintainers":[{"name":"chevex","email":"alex.ford@codetunnel.com"}],"directories":{}},"1.0.13":{"name":"yargs","version":"1.0.13","description":"Light-weight option parsing with an argv hash. No optstrings attached.","main":"./index.js","dependencies":{"minimist":"~0.0.1"},"devDependencies":{"hashish":"~0.0.4","tap":"~0.4.0"},"scripts":{"test":"tap ./test/*.js"},"repository":{"type":"git","url":"http://github.com/chevex/yargs.git"},"keywords":["argument","args","option","parser","parsing","cli","command"],"author":{"name":"Alex Ford","email":"Alex.Ford@CodeTunnel.com","url":"forked from James Halliday"},"license":"MIT/X11","engine":{"node":">=0.4"},"bugs":{"url":"https://github.com/chevex/yargs/issues"},"homepage":"https://github.com/chevex/yargs","_id":"yargs@1.0.13","dist":{"shasum":"8a9d0ecd81079d44dbb91281f17255ae31f1b3d3","tarball":"http://registry.npmjs.org/yargs/-/yargs-1.0.13.tgz"},"_from":".","_npmVersion":"1.3.26","_npmUser":{"name":"chevex","email":"alex.ford@codetunnel.com"},"maintainers":[{"name":"chevex","email":"alex.ford@codetunnel.com"}],"directories":{}},"1.0.15":{"name":"yargs","version":"1.0.15","description":"Light-weight option parsing with an argv hash. No optstrings attached.","main":"./index.js","dependencies":{"minimist":"~0.0.1"},"devDependencies":{"hashish":"~0.0.4","tap":"~0.4.0"},"scripts":{"test":"tap ./test/*.js"},"repository":{"type":"git","url":"http://github.com/chevex/yargs.git"},"keywords":["argument","args","option","parser","parsing","cli","command"],"author":{"name":"Alex Ford","email":"Alex.Ford@CodeTunnel.com","url":"forked from James Halliday"},"license":"MIT/X11","engine":{"node":">=0.4"},"bugs":{"url":"https://github.com/chevex/yargs/issues"},"homepage":"https://github.com/chevex/yargs","_id":"yargs@1.0.15","dist":{"shasum":"c0fe4988495615c98e51c12b700783aa3ee2c0f6","tarball":"http://registry.npmjs.org/yargs/-/yargs-1.0.15.tgz"},"_from":".","_npmVersion":"1.3.24","_npmUser":{"name":"chevex","email":"alex.ford@codetunnel.com"},"maintainers":[{"name":"chevex","email":"alex.ford@codetunnel.com"}],"directories":{}},"1.1.0":{"name":"yargs","version":"1.1.0","description":"Light-weight option parsing with an argv hash. No optstrings attached.","main":"./index.js","dependencies":{"minimist":"~0.0.1"},"devDependencies":{"hashish":"*","mocha":"*","chai":"*"},"scripts":{"test":"mocha -R nyan"},"repository":{"type":"git","url":"http://github.com/chevex/yargs.git"},"keywords":["argument","args","option","parser","parsing","cli","command"],"author":{"name":"Alex Ford","email":"Alex.Ford@CodeTunnel.com","url":"http://CodeTunnel.com"},"license":"MIT/X11","engine":{"node":">=0.4"},"bugs":{"url":"https://github.com/chevex/yargs/issues"},"homepage":"https://github.com/chevex/yargs","_id":"yargs@1.1.0","dist":{"shasum":"47631b24f96c2c15ebe555d250671ddbfd740c3a","tarball":"http://registry.npmjs.org/yargs/-/yargs-1.1.0.tgz"},"_from":".","_npmVersion":"1.3.26","_npmUser":{"name":"chevex","email":"alex.ford@codetunnel.com"},"maintainers":[{"name":"chevex","email":"alex.ford@codetunnel.com"}],"directories":{}},"1.1.1":{"name":"yargs","version":"1.1.1","description":"Light-weight option parsing with an argv hash. No optstrings attached.","main":"./index.js","dependencies":{"minimist":"~0.0.1"},"devDependencies":{"hashish":"*","mocha":"*","chai":"*"},"scripts":{"test":"mocha -R nyan"},"repository":{"type":"git","url":"http://github.com/chevex/yargs.git"},"keywords":["argument","args","option","parser","parsing","cli","command"],"author":{"name":"Alex Ford","email":"Alex.Ford@CodeTunnel.com","url":"http://CodeTunnel.com"},"license":"MIT/X11","engine":{"node":">=0.4"},"bugs":{"url":"https://github.com/chevex/yargs/issues"},"homepage":"https://github.com/chevex/yargs","_id":"yargs@1.1.1","dist":{"shasum":"3454e66c8877767b4450e5db92dc4067f3923539","tarball":"http://registry.npmjs.org/yargs/-/yargs-1.1.1.tgz"},"_from":".","_npmVersion":"1.3.26","_npmUser":{"name":"chevex","email":"alex.ford@codetunnel.com"},"maintainers":[{"name":"chevex","email":"alex.ford@codetunnel.com"}],"directories":{}},"1.1.2":{"name":"yargs","version":"1.1.2","description":"Light-weight option parsing with an argv hash. No optstrings attached.","main":"./index.js","dependencies":{"minimist":"~0.0.1"},"devDependencies":{"hashish":"*","mocha":"*","chai":"*"},"scripts":{"test":"mocha -R nyan"},"repository":{"type":"git","url":"http://github.com/chevex/yargs.git"},"keywords":["argument","args","option","parser","parsing","cli","command"],"author":{"name":"Alex Ford","email":"Alex.Ford@CodeTunnel.com","url":"http://CodeTunnel.com"},"license":"MIT/X11","engine":{"node":">=0.4"},"bugs":{"url":"https://github.com/chevex/yargs/issues"},"homepage":"https://github.com/chevex/yargs","_id":"yargs@1.1.2","dist":{"shasum":"fa6e6bc52e942ebeb4df88244f90bd64579080b8","tarball":"http://registry.npmjs.org/yargs/-/yargs-1.1.2.tgz"},"_from":".","_npmVersion":"1.3.26","_npmUser":{"name":"chevex","email":"alex.ford@codetunnel.com"},"maintainers":[{"name":"chevex","email":"alex.ford@codetunnel.com"}],"directories":{}},"1.1.3":{"name":"yargs","version":"1.1.3","description":"Light-weight option parsing with an argv hash. No optstrings attached.","main":"./index.js","dependencies":{"minimist":"~0.0.1"},"devDependencies":{"hashish":"*","mocha":"*","chai":"*"},"scripts":{"test":"mocha -R nyan"},"repository":{"type":"git","url":"http://github.com/chevex/yargs.git"},"keywords":["argument","args","option","parser","parsing","cli","command"],"author":{"name":"Alex Ford","email":"Alex.Ford@CodeTunnel.com","url":"http://CodeTunnel.com"},"license":"MIT/X11","engine":{"node":">=0.4"},"bugs":{"url":"https://github.com/chevex/yargs/issues"},"homepage":"https://github.com/chevex/yargs","_id":"yargs@1.1.3","dist":{"shasum":"c44ed2bb9c86d55b557f2179fea7c7013fe4c42a","tarball":"http://registry.npmjs.org/yargs/-/yargs-1.1.3.tgz"},"_from":".","_npmVersion":"1.3.26","_npmUser":{"name":"chevex","email":"alex.ford@codetunnel.com"},"maintainers":[{"name":"chevex","email":"alex.ford@codetunnel.com"}],"directories":{}},"1.2.0":{"name":"yargs","version":"1.2.0","description":"Light-weight option parsing with an argv hash. No optstrings attached.","main":"./index.js","dependencies":{"minimist":"~0.0.1"},"devDependencies":{"hashish":"*","mocha":"*","chai":"*"},"scripts":{"test":"mocha -R nyan"},"repository":{"type":"git","url":"http://github.com/chevex/yargs.git"},"keywords":["argument","args","option","parser","parsing","cli","command"],"author":{"name":"Alex Ford","email":"Alex.Ford@CodeTunnel.com","url":"http://CodeTunnel.com"},"license":"MIT/X11","engine":{"node":">=0.4"},"bugs":{"url":"https://github.com/chevex/yargs/issues"},"homepage":"https://github.com/chevex/yargs","_id":"yargs@1.2.0","dist":{"shasum":"2499eb5eb8c99fccb0586e7b0e73c441f0286ed7","tarball":"http://registry.npmjs.org/yargs/-/yargs-1.2.0.tgz"},"_from":".","_npmVersion":"1.4.4","_npmUser":{"name":"chevex","email":"alex.ford@codetunnel.com"},"maintainers":[{"name":"chevex","email":"alex.ford@codetunnel.com"}],"directories":{}},"1.2.1":{"name":"yargs","version":"1.2.1","description":"Light-weight option parsing with an argv hash. No optstrings attached.","main":"./index.js","dependencies":{"minimist":"~0.0.1"},"devDependencies":{"hashish":"*","mocha":"*","chai":"*"},"scripts":{"test":"mocha -R nyan"},"repository":{"type":"git","url":"http://github.com/chevex/yargs.git"},"keywords":["argument","args","option","parser","parsing","cli","command"],"author":{"name":"Alex Ford","email":"Alex.Ford@CodeTunnel.com","url":"http://CodeTunnel.com"},"license":"MIT/X11","engine":{"node":">=0.4"},"bugs":{"url":"https://github.com/chevex/yargs/issues"},"homepage":"https://github.com/chevex/yargs","_id":"yargs@1.2.1","dist":{"shasum":"4970c3df026bda60f02a6c213f96e2f4e5c6351a","tarball":"http://registry.npmjs.org/yargs/-/yargs-1.2.1.tgz"},"_from":".","_npmVersion":"1.4.4","_npmUser":{"name":"chevex","email":"alex.ford@codetunnel.com"},"maintainers":[{"name":"chevex","email":"alex.ford@codetunnel.com"}],"directories":{}},"1.2.2":{"name":"yargs","version":"1.2.2","description":"Light-weight option parsing with an argv hash. No optstrings attached.","main":"./index.js","dependencies":{"minimist":"~0.0.1"},"devDependencies":{"hashish":"*","mocha":"*","chai":"*"},"scripts":{"test":"mocha -R nyan"},"repository":{"type":"git","url":"http://github.com/chevex/yargs.git"},"keywords":["argument","args","option","parser","parsing","cli","command"],"author":{"name":"Alex Ford","email":"Alex.Ford@CodeTunnel.com","url":"http://CodeTunnel.com"},"license":"MIT/X11","engine":{"node":">=0.4"},"bugs":{"url":"https://github.com/chevex/yargs/issues"},"homepage":"https://github.com/chevex/yargs","_id":"yargs@1.2.2","_shasum":"36b364c8d72d1213b4f720d5cf716dfde4f0a113","_from":".","_npmVersion":"1.4.9","_npmUser":{"name":"chevex","email":"alex.ford@codetunnel.com"},"maintainers":[{"name":"chevex","email":"alex.ford@codetunnel.com"}],"dist":{"shasum":"36b364c8d72d1213b4f720d5cf716dfde4f0a113","tarball":"http://registry.npmjs.org/yargs/-/yargs-1.2.2.tgz"},"directories":{}},"1.2.3":{"name":"yargs","version":"1.2.3","description":"Light-weight option parsing with an argv hash. No optstrings attached.","main":"./index.js","dependencies":{"minimist":"~0.0.1"},"devDependencies":{"hashish":"*","mocha":"*","chai":"*"},"scripts":{"test":"mocha -R nyan"},"repository":{"type":"git","url":"http://github.com/chevex/yargs.git"},"keywords":["argument","args","option","parser","parsing","cli","command"],"author":{"name":"Alex Ford","email":"Alex.Ford@CodeTunnel.com","url":"http://CodeTunnel.com"},"license":"MIT/X11","engine":{"node":">=0.4"},"gitHead":"b61c69e5a92f37df43cc0d7e662c4625b9975864","bugs":{"url":"https://github.com/chevex/yargs/issues"},"homepage":"https://github.com/chevex/yargs","_id":"yargs@1.2.3","_shasum":"72b320b1f74dc576f03f4abfdf838ce7cce114c7","_from":".","_npmVersion":"1.4.14","_npmUser":{"name":"chevex","email":"alex.ford@codetunnel.com"},"maintainers":[{"name":"chevex","email":"alex.ford@codetunnel.com"}],"dist":{"shasum":"72b320b1f74dc576f03f4abfdf838ce7cce114c7","tarball":"http://registry.npmjs.org/yargs/-/yargs-1.2.3.tgz"},"directories":{}},"1.2.4":{"name":"yargs","version":"1.2.4","description":"Light-weight option parsing with an argv hash. No optstrings attached.","main":"./index.js","dependencies":{"minimist":"^0.1.0"},"devDependencies":{"hashish":"*","mocha":"*","chai":"*"},"scripts":{"test":"mocha -R nyan"},"repository":{"type":"git","url":"http://github.com/chevex/yargs.git"},"keywords":["argument","args","option","parser","parsing","cli","command"],"author":{"name":"Alex Ford","email":"Alex.Ford@CodeTunnel.com","url":"http://CodeTunnel.com"},"license":"MIT/X11","engine":{"node":">=0.4"},"gitHead":"91682b61bd3d9c1fcc5b095a96482d549718befa","bugs":{"url":"https://github.com/chevex/yargs/issues"},"homepage":"https://github.com/chevex/yargs","_id":"yargs@1.2.4","_shasum":"42e3ff286107aea90a1337a69dba81312712f88f","_from":".","_npmVersion":"1.4.14","_npmUser":{"name":"chevex","email":"alex.ford@codetunnel.com"},"maintainers":[{"name":"chevex","email":"alex.ford@codetunnel.com"}],"dist":{"shasum":"42e3ff286107aea90a1337a69dba81312712f88f","tarball":"http://registry.npmjs.org/yargs/-/yargs-1.2.4.tgz"},"directories":{}},"1.2.5":{"name":"yargs","version":"1.2.5","description":"Light-weight option parsing with an argv hash. No optstrings attached.","main":"./index.js","dependencies":{"minimist":"^0.1.0"},"devDependencies":{"hashish":"*","mocha":"*","chai":"*"},"scripts":{"test":"mocha -R nyan"},"repository":{"type":"git","url":"http://github.com/chevex/yargs.git"},"keywords":["argument","args","option","parser","parsing","cli","command"],"author":{"name":"Alex Ford","email":"Alex.Ford@CodeTunnel.com","url":"http://CodeTunnel.com"},"license":"MIT/X11","engine":{"node":">=0.4"},"gitHead":"fe001dca7d1746834019c842db32360a27802f40","bugs":{"url":"https://github.com/chevex/yargs/issues"},"homepage":"https://github.com/chevex/yargs","_id":"yargs@1.2.5","_shasum":"ba5a27901b8d53fa224faa67c6ed76d8c6e19476","_from":".","_npmVersion":"1.4.14","_npmUser":{"name":"chevex","email":"alex.ford@codetunnel.com"},"maintainers":[{"name":"chevex","email":"alex.ford@codetunnel.com"}],"dist":{"shasum":"ba5a27901b8d53fa224faa67c6ed76d8c6e19476","tarball":"http://registry.npmjs.org/yargs/-/yargs-1.2.5.tgz"},"directories":{}},"1.2.6":{"name":"yargs","version":"1.2.6","description":"Light-weight option parsing with an argv hash. No optstrings attached.","main":"./index.js","dependencies":{"minimist":"^0.1.0"},"devDependencies":{"hashish":"*","mocha":"*","chai":"*"},"scripts":{"test":"mocha -R nyan"},"repository":{"type":"git","url":"http://github.com/chevex/yargs.git"},"keywords":["argument","args","option","parser","parsing","cli","command"],"author":{"name":"Alex Ford","email":"Alex.Ford@CodeTunnel.com","url":"http://CodeTunnel.com"},"license":"MIT/X11","engine":{"node":">=0.4"},"gitHead":"ed1216f75be676bf5cbd7f26daf7ea4a2cb4a208","bugs":{"url":"https://github.com/chevex/yargs/issues"},"homepage":"https://github.com/chevex/yargs","_id":"yargs@1.2.6","_shasum":"9c7b4a82fd5d595b2bf17ab6dcc43135432fe34b","_from":".","_npmVersion":"1.4.14","_npmUser":{"name":"chevex","email":"alex.ford@codetunnel.com"},"maintainers":[{"name":"chevex","email":"alex.ford@codetunnel.com"}],"dist":{"shasum":"9c7b4a82fd5d595b2bf17ab6dcc43135432fe34b","tarball":"http://registry.npmjs.org/yargs/-/yargs-1.2.6.tgz"},"directories":{}},"1.3.0":{"name":"yargs","version":"1.3.0","description":"Light-weight option parsing with an argv hash. No optstrings attached.","main":"./index.js","dependencies":{"minimist":"^0.2.0"},"devDependencies":{"hashish":"*","mocha":"*","chai":"*"},"scripts":{"test":"mocha -R nyan"},"repository":{"type":"git","url":"http://github.com/chevex/yargs.git"},"keywords":["argument","args","option","parser","parsing","cli","command"],"author":{"name":"Alex Ford","email":"Alex.Ford@CodeTunnel.com","url":"http://CodeTunnel.com"},"license":"MIT/X11","engine":{"node":">=0.4"},"gitHead":"156b490561135ec1f3cb72d6000d1e54374e7005","bugs":{"url":"https://github.com/chevex/yargs/issues"},"homepage":"https://github.com/chevex/yargs","_id":"yargs@1.3.0","_shasum":"77f8faeead22db126925f13d5d513bbdac4c0085","_from":".","_npmVersion":"1.4.21","_npmUser":{"name":"chevex","email":"alex.ford@codetunnel.com"},"maintainers":[{"name":"chevex","email":"alex.ford@codetunnel.com"}],"dist":{"shasum":"77f8faeead22db126925f13d5d513bbdac4c0085","tarball":"http://registry.npmjs.org/yargs/-/yargs-1.3.0.tgz"},"directories":{}},"1.3.1":{"name":"yargs","version":"1.3.1","description":"Light-weight option parsing with an argv hash. No optstrings attached.","main":"./index.js","dependencies":{},"devDependencies":{"hashish":"*","mocha":"*","chai":"*"},"scripts":{"test":"mocha -R nyan"},"repository":{"type":"git","url":"http://github.com/chevex/yargs.git"},"keywords":["argument","args","option","parser","parsing","cli","command"],"author":{"name":"Alex Ford","email":"Alex.Ford@CodeTunnel.com","url":"http://CodeTunnel.com"},"license":"MIT/X11","engine":{"node":">=0.4"},"gitHead":"28a38053ef079f49aa84cff0da1ab6618f6effc3","bugs":{"url":"https://github.com/chevex/yargs/issues"},"homepage":"https://github.com/chevex/yargs","_id":"yargs@1.3.1","_shasum":"4d1a24962724cca9d4dcb3d60712467bf3645e5b","_from":".","_npmVersion":"1.4.21","_npmUser":{"name":"chevex","email":"alex.ford@codetunnel.com"},"maintainers":[{"name":"chevex","email":"alex.ford@codetunnel.com"}],"dist":{"shasum":"4d1a24962724cca9d4dcb3d60712467bf3645e5b","tarball":"http://registry.npmjs.org/yargs/-/yargs-1.3.1.tgz"},"directories":{}}},"readme":"yargs\u000a========\u000a\u000aYargs be a node.js library fer hearties tryin' ter parse optstrings against their will where even the boo box be not enough to coerce them. This here module is fer scallywags lookin' ter plunder all the sunken -shipz of their --treasures thru program usage but be tired of optstrings disincling to acquiesce to yer requests.\u000a\u000aWith yargs, ye be havin' a map that leads straight to yer treasure! Treasure of course, being a simple option hash.\u000a\u000a[![Build Status](https://travis-ci.org/chevex/yargs.png)](https://travis-ci.org/chevex/yargs)\u000a[![Dependency Status](https://gemnasium.com/chevex/yargs.png)](https://gemnasium.com/chevex/yargs)\u000a[![NPM version](https://badge.fury.io/js/yargs.png)](http://badge.fury.io/js/yargs)\u000a\u000a> ~~NOTE: Yargs is a fork of [optimist](https://github.com/substack/node-optimist) by [substack (James Halliday)](https://github.com/substack). It is obvious that substack is stretched pretty thin maintaining over 300 modules on npm at the time of this writing. So rather than complain in the project issue tracker I thought I'd just pick up the torch and maintain a proper fork. Currently the project is totally backward compatible with optimist but this may change in the future (if it does I will update this notice to inform you of this). For now though, enjoy optimist with about 5 months worth of fixes and updates rolled in, most of them pulled from optimist's own [stale pull requests](https://github.com/substack/node-optimist/pulls).~~\u000a\u000a> UPDATE: Yargs is now the official successor to optimist. Please feel free to submit issues and pull requests. While I personally don't have the time to pore over all the issues and fix all of them on a regular basis, I'm more than happy to look over pull requests, test them, and merge them in. If you'd like to contribute and don't know where to start, have a look at [the issue list](https://github.com/chevex/yargs/issues) :)\u000a\u000aexamples\u000a========\u000a\u000aWith yargs, the options be just a hash! No optstrings be attached.\u000a-------------------------------------------------------------------\u000a\u000axup.js:\u000a\u000a````javascript\u000a#!/usr/bin/env node\u000avar argv = require('yargs').argv;\u000a\u000aif (argv.rif - 5 * argv.xup > 7.138) {\u000a    console.log('Plunder more riffiwobbles!');\u000a}\u000aelse {\u000a    console.log('Drop the xupptumblers!');\u000a}\u000a````\u000a\u000a***\u000a\u000a    $ ./xup.js --rif=55 --xup=9.52\u000a    Plunder more riffiwobbles!\u000a    \u000a    $ ./xup.js --rif 12 --xup 8.1\u000a    Drop the xupptumblers!\u000a\u000a![Joe was one optimistic pirate.](http://i.imgur.com/4WFGVJ9.png)\u000a\u000aBut don' walk the plank jus' yet! Ther' be more! Ye can do short options:\u000a-------------------------------------------------\u000a \u000ashort.js:\u000a\u000a````javascript\u000a#!/usr/bin/env node\u000avar argv = require('yargs').argv;\u000aconsole.log('(%d,%d)', argv.x, argv.y);\u000a````\u000a\u000a***\u000a\u000a    $ ./short.js -x 10 -y 21\u000a    (10,21)\u000a\u000aAnd gold doubooleans, both long an' short (an' grouped!):\u000a----------------------------------\u000a\u000abool.js:\u000a\u000a````javascript\u000a#!/usr/bin/env node\u000avar util = require('util');\u000avar argv = require('yargs').argv;\u000a\u000aif (argv.s) {\u000a    util.print(argv.fr ? 'Le perroquet dit: ' : 'The parrot says: ');\u000a}\u000aconsole.log(\u000a    (argv.fr ? 'couac' : 'squawk') + (argv.p ? '!' : '')\u000a);\u000a````\u000a\u000a***\u000a\u000a    $ ./bool.js -s\u000a    The parrot says: squawk\u000a    \u000a    $ ./bool.js -sp\u000a    The parrot says: squawk!\u000a\u000a    $ ./bool.js -sp --fr\u000a    Le perroquet dit: couac!\u000a\u000aAnd non-hyphenated options too! Just use `argv._`!\u000a-------------------------------------------------\u000a \u000anonopt.js:\u000a\u000a````javascript\u000a#!/usr/bin/env node\u000avar argv = require('yargs').argv;\u000aconsole.log('(%d,%d)', argv.x, argv.y);\u000aconsole.log(argv._);\u000a````\u000a\u000a***\u000a\u000a    $ ./nonopt.js -x 6.82 -y 3.35 rum\u000a    (6.82,3.35)\u000a    [ 'rum' ]\u000a    \u000a    $ ./nonopt.js \"me hearties\" -x 0.54 yo -y 1.12 ho\u000a    (0.54,1.12)\u000a    [ 'me hearties', 'yo', 'ho' ]\u000a\u000aYargs even counts yer gold doubooleans!\u000a----------------------------------------------------------------------\u000a\u000acount.js\u000a\u000a````javascript\u000a#!/usr/bin/env node\u000avar argv = require('yargs')\u000a    .count('verbose')\u000a    .alias('v', 'verbose')\u000a    .argv;\u000a\u000aVERBOSE_LEVEL = argv.verbose;\u000a\u000afunction WARN()  { VERBOSE_LEVEL >= 0 && console.log.apply(console, arguments); }\u000afunction INFO()  { VERBOSE_LEVEL >= 1 && console.log.apply(console, arguments); }\u000afunction DEBUG() { VERBOSE_LEVEL >= 2 && console.log.apply(console, arguments); }\u000a\u000aWARN(\"Showing only important stuff\");\u000aINFO(\"Showing semi-mportant stuff too\");\u000aDEBUG(\"Extra chatty mode\");\u000a````\u000a\u000a***\u000a    $ node count.js\u000a    Showing only important stuff\u000a\u000a    $ node count.js -v\u000a    Showing only important stuff\u000a    Showing semi-important stuff too\u000a\u000a    $ node count.js -vv\u000a    Showing only important stuff\u000a    Showing semi-important stuff too\u000a    Extra chatty mode\u000a\u000a    $ node count.js -v --verbose\u000a    Showing only important stuff\u000a    Showing semi-important stuff too\u000a    Extra chatty mode\u000a\u000aTell yer friends how ter use yer options and make demands from yer enemies.\u000a-------------------------------------------------\u000a\u000adivide.js:\u000a\u000a````javascript\u000a#!/usr/bin/env node\u000avar argv = require('yargs')\u000a    .usage('Usage: $0 -x [num] -y [num]')\u000a    .demand(['x','y'])\u000a    .argv;\u000a\u000aconsole.log(argv.x / argv.y);\u000a````\u000a\u000a***\u000a \u000a    $ ./divide.js -x 55 -y 11\u000a    5\u000a    \u000a    $ node ./divide.js -x 4.91 -z 2.51\u000a    Usage: node ./divide.js -x [num] -y [num]\u000a\u000a    Options:\u000a      -x  [required]\u000a      -y  [required]\u000a\u000a    Missing required arguments: y\u000a\u000aAfter yer demands have been met, demand more! Ask for non-hypenated arguments!\u000a-----------------------------------------\u000a\u000ademand_count.js:\u000a\u000a````javascript\u000a#!/usr/bin/env node\u000avar argv = require('yargs')\u000a    .demand(2)\u000a    .argv;\u000aconsole.dir(argv)\u000a````\u000a\u000a***\u000a\u000a\u0009$ ./demand_count.js a\u000a\u0009Not enough arguments, expected 2, but only found 1\u000a\u0009$ ./demand_count.js a b\u000a\u0009{ _: [ 'a', 'b' ], '$0': 'node ./demand_count.js' }\u000a\u0009$ ./demand_count.js a b c\u000a\u0009{ _: [ 'a', 'b', 'c' ], '$0': 'node ./demand_count.js' }\u000a\u000aEVEN MORE SHIVER ME TIMBERS!\u000a------------------\u000a\u000adefault_singles.js:\u000a\u000a````javascript\u000a#!/usr/bin/env node\u000avar argv = require('yargs')\u000a    .default('x', 10)\u000a    .default('y', 10)\u000a    .argv\u000a;\u000aconsole.log(argv.x + argv.y);\u000a````\u000a\u000a***\u000a\u000a    $ ./default_singles.js -x 5\u000a    15\u000a\u000adefault_hash.js:\u000a\u000a````javascript\u000a#!/usr/bin/env node\u000avar argv = require('yargs')\u000a    .default({ x : 10, y : 10 })\u000a    .argv\u000a;\u000aconsole.log(argv.x + argv.y);\u000a````\u000a\u000a***\u000a\u000a    $ ./default_hash.js -y 7\u000a    17\u000a\u000aAnd if ye really want ter get all descriptive about it...\u000a---------------------------------------------------------\u000a\u000aboolean_single.js\u000a\u000a````javascript\u000a#!/usr/bin/env node\u000avar argv = require('yargs')\u000a    .boolean('v')\u000a    .argv\u000a;\u000aconsole.dir(argv.v);\u000aconsole.dir(argv._);\u000a````\u000a\u000a***\u000a\u000a    $ ./boolean_single.js -v \"me hearties\" yo ho\u000a    true\u000a    [ 'me hearties', 'yo', 'ho' ]\u000a    \u000a\u000aboolean_double.js\u000a\u000a````javascript\u000a#!/usr/bin/env node\u000avar argv = require('yargs')\u000a    .boolean(['x','y','z'])\u000a    .argv\u000a;\u000aconsole.dir([ argv.x, argv.y, argv.z ]);\u000aconsole.dir(argv._);\u000a````\u000a\u000a***\u000a\u000a    $ ./boolean_double.js -x -z one two three\u000a    [ true, false, true ]\u000a    [ 'one', 'two', 'three' ]\u000a\u000aYargs is here ter help ye...\u000a---------------------------\u000a\u000aYe can describe parameters fer help messages and set aliases. Yargs figures\u000aout how ter format a handy help string automatically.\u000a\u000aline_count.js\u000a\u000a````javascript\u000a#!/usr/bin/env node\u000avar argv = require('yargs')\u000a    .usage('Count the lines in a file.\\nUsage: $0')\u000a    .example('$0 -f', 'count the lines in the given file')\u000a    .demand('f')\u000a    .alias('f', 'file')\u000a    .describe('f', 'Load a file')\u000a    .argv\u000a;\u000a\u000avar fs = require('fs');\u000avar s = fs.createReadStream(argv.file);\u000a\u000avar lines = 0;\u000as.on('data', function (buf) {\u000a    lines += buf.toString().match(/\\n/g).length;\u000a});\u000a\u000as.on('end', function () {\u000a    console.log(lines);\u000a});\u000a````\u000a\u000a***\u000a\u000a    $ node line_count.js\u000a    Count the lines in a file.\u000a    Usage: node ./line_count.js\u000a\u000a    Examples:\u000a      node ./line_count.js -f   count the lines in the given file\u000a\u000a    Options:\u000a      -f, --file  Load a file  [required]\u000a\u000a    Missing required arguments: f\u000a\u000a    $ node line_count.js --file line_count.js \u000a    20\u000a    \u000a    $ node line_count.js -f line_count.js \u000a    20\u000a\u000amethods\u000a=======\u000a\u000aBy itself,\u000a\u000a````javascript\u000arequire('yargs').argv\u000a`````\u000a\u000awill use `process.argv` array to construct the `argv` object.\u000a\u000aYou can pass in the `process.argv` yourself:\u000a\u000a````javascript\u000arequire('yargs')([ '-x', '1', '-y', '2' ]).argv\u000a````\u000a\u000aor use .parse() to do the same thing:\u000a\u000a````javascript\u000arequire('yargs').parse([ '-x', '1', '-y', '2' ])\u000a````\u000a\u000aThe rest of these methods below come in just before the terminating `.argv`.\u000a\u000a.alias(key, alias)\u000a------------------\u000a\u000aSet key names as equivalent such that updates to a key will propagate to aliases\u000aand vice-versa.\u000a\u000aOptionally `.alias()` can take an object that maps keys to aliases.\u000aEach key of this object should be the canonical version of the option, and each\u000avalue should be a string or an array of strings.\u000a\u000a.default(key, value)\u000a--------------------\u000a\u000aSet `argv[key]` to `value` if no option was specified on `process.argv`.\u000a\u000aOptionally `.default()` can take an object that maps keys to default values.\u000a\u000a.demand(key, [msg | boolean])\u000a-----------------------------\u000a.require(key, [msg | boolean])\u000a------------------------------\u000a.required(key, [msg | boolean])\u000a-------------------------------\u000a\u000aIf `key` is a string, show the usage information and exit if `key` wasn't\u000aspecified in `process.argv`.\u000a\u000aIf `key` is a number, demand at least as many non-option arguments, which show\u000aup in `argv._`.\u000a\u000aIf `key` is an Array, demand each element.\u000a\u000aIf a `msg` string is given, it will be printed when the argument is missing,\u000ainstead of the standard error message. This is especially helpful for the non-option arguments in `argv._`.\u000a\u000aIf a `boolean` value is given, it controls whether the option is demanded;\u000athis is useful when using `.options()` to specify comman
96 error registry error parsing json
97 verbose headers { date: 'Thu, 28 Aug 2014 01:25:14 GMT',
97 verbose headers   server: 'CouchDB/1.5.0 (Erlang OTP/R16B03)',
97 verbose headers   etag: '"33FKHLE95MJUCYFU33T4WTIMW"',
97 verbose headers   'content-type': 'application/json',
97 verbose headers   'cache-control': 'max-age=60',
97 verbose headers   'content-length': '49954',
97 verbose headers   'accept-ranges': 'bytes',
97 verbose headers   via: '1.1 varnish',
97 verbose headers   age: '320',
97 verbose headers   'x-served-by': 'cache-iad2129-IAD',
97 verbose headers   'x-cache': 'HIT',
97 verbose headers   'x-cache-hits': '1',
97 verbose headers   'x-timer': 'S1409189114.437063,VS0,VE1',
97 verbose headers   vary: 'Accept',
97 verbose headers   'keep-alive': 'timeout=10, max=50',
97 verbose headers   connection: 'Keep-Alive' }
98 silly registry.get cb [ 200,
98 silly registry.get   { date: 'Thu, 28 Aug 2014 01:25:14 GMT',
98 silly registry.get     server: 'CouchDB/1.5.0 (Erlang OTP/R16B03)',
98 silly registry.get     etag: '"33FKHLE95MJUCYFU33T4WTIMW"',
98 silly registry.get     'content-type': 'application/json',
98 silly registry.get     'cache-control': 'max-age=60',
98 silly registry.get     'content-length': '49954',
98 silly registry.get     'accept-ranges': 'bytes',
98 silly registry.get     via: '1.1 varnish',
98 silly registry.get     age: '320',
98 silly registry.get     'x-served-by': 'cache-iad2129-IAD',
98 silly registry.get     'x-cache': 'HIT',
98 silly registry.get     'x-cache-hits': '1',
98 silly registry.get     'x-timer': 'S1409189114.437063,VS0,VE1',
98 silly registry.get     vary: 'Accept',
98 silly registry.get     'keep-alive': 'timeout=10, max=50',
98 silly registry.get     connection: 'Keep-Alive' } ]
99 silly lockFile ab25150e-yargs-1-2-2 yargs@^1.2.2
100 silly lockFile ab25150e-yargs-1-2-2 yargs@^1.2.2
101 verbose about to build C:\Users\Administrador\AppData\Roaming\npm\node_modules\css2stylus
102 verbose node_modules\css2stylus unbuild
103 info preuninstall css2stylus@0.1.4
104 info uninstall css2stylus@0.1.4
105 verbose true,C:\Users\Administrador\AppData\Roaming\npm\node_modules,C:\Users\Administrador\AppData\Roaming\npm\node_modules unbuild css2stylus@0.1.4
106 verbose C:\Users\Administrador\AppData\Roaming\npm,[object Object] binRoot
107 info postuninstall css2stylus@0.1.4
108 error SyntaxError: Unexpected end of input
108 error {"_id":"yargs","_rev":"63-6efb8a404039b2a96f2b82342fa4c261","name":"yargs","description":"Light-weight option parsing with an argv hash. No optstrings attached.","dist-tags":{"latest":"1.3.1"},"versions":{"1.0.0":{"name":"yargs","version":"1.0.0","description":"Light-weight option parsing with an argv hash. No optstrings attached.","main":"./index.js","dependencies":{"minimist":"~0.0.1"},"devDependencies":{"hashish":"~0.0.4","tap":"~0.4.0"},"scripts":{"test":"tap ./test/*.js"},"repository":{"type":"git","url":"http://github.com/chevex/yargs.git"},"keywords":["argument","args","option","parser","parsing","cli","command"],"author":{"name":"Alex Ford","email":"Alex.Ford@CodeTunnel.com","url":"forked from James Halliday"},"license":"MIT/X11","engine":{"node":">=0.4"},"bugs":{"url":"https://github.com/chevex/yargs/issues"},"homepage":"https://github.com/chevex/yargs","_id":"yargs@1.0.0","dist":{"shasum":"28eec7c0b14eda55aa0d0ff38c9e98f58782387c","tarball":"http://registry.npmjs.org/yargs/-/yargs-1.0.0.tgz"},"_from":".","_npmVersion":"1.3.14","_npmUser":{"name":"chevex","email":"alex.ford@codetunnel.com"},"maintainers":[{"name":"chevex","email":"alex.ford@codetunnel.com"}],"directories":{}},"1.0.1":{"name":"yargs","version":"1.0.1","description":"Light-weight option parsing with an argv hash. No optstrings attached.","main":"./index.js","dependencies":{"minimist":"~0.0.1"},"devDependencies":{"hashish":"~0.0.4","tap":"~0.4.0"},"scripts":{"test":"tap ./test/*.js"},"repository":{"type":"git","url":"http://github.com/chevex/yargs.git"},"keywords":["argument","args","option","parser","parsing","cli","command"],"author":{"name":"Alex Ford","email":"Alex.Ford@CodeTunnel.com","url":"forked from James Halliday"},"license":"MIT/X11","engine":{"node":">=0.4"},"bugs":{"url":"https://github.com/chevex/yargs/issues"},"homepage":"https://github.com/chevex/yargs","_id":"yargs@1.0.1","dist":{"shasum":"95172f9cda36f25ab427c4330b6e249bd5a6b22d","tarball":"http://registry.npmjs.org/yargs/-/yargs-1.0.1.tgz"},"_from":".","_npmVersion":"1.3.14","_npmUser":{"name":"chevex","email":"alex.ford@codetunnel.com"},"maintainers":[{"name":"chevex","email":"alex.ford@codetunnel.com"}],"directories":{}},"1.0.3":{"name":"yargs","version":"1.0.3","description":"Light-weight option parsing with an argv hash. No optstrings attached.","main":"./index.js","dependencies":{"minimist":"~0.0.1"},"devDependencies":{"hashish":"~0.0.4","tap":"~0.4.0"},"scripts":{"test":"tap ./test/*.js"},"repository":{"type":"git","url":"http://github.com/chevex/yargs.git"},"keywords":["argument","args","option","parser","parsing","cli","command"],"author":{"name":"Alex Ford","email":"Alex.Ford@CodeTunnel.com","url":"forked from James Halliday"},"license":"MIT/X11","engine":{"node":">=0.4"},"bugs":{"url":"https://github.com/chevex/yargs/issues"},"homepage":"https://github.com/chevex/yargs","_id":"yargs@1.0.3","dist":{"shasum":"571d21320c79ee2f8f81bea63b045d12e092a21b","tarball":"http://registry.npmjs.org/yargs/-/yargs-1.0.3.tgz"},"_from":".","_npmVersion":"1.3.14","_npmUser":{"name":"chevex","email":"alex.ford@codetunnel.com"},"maintainers":[{"name":"chevex","email":"alex.ford@codetunnel.com"}],"directories":{}},"1.0.4":{"name":"yargs","version":"1.0.4","description":"Light-weight option parsing with an argv hash. No optstrings attached.","main":"./index.js","dependencies":{"minimist":"~0.0.1"},"devDependencies":{"hashish":"~0.0.4","tap":"~0.4.0"},"scripts":{"test":"tap ./test/*.js"},"repository":{"type":"git","url":"http://github.com/chevex/yargs.git"},"keywords":["argument","args","option","parser","parsing","cli","command"],"author":{"name":"Alex Ford","email":"Alex.Ford@CodeTunnel.com","url":"forked from James Halliday"},"license":"MIT/X11","engine":{"node":">=0.4"},"bugs":{"url":"https://github.com/chevex/yargs/issues"},"homepage":"https://github.com/chevex/yargs","_id":"yargs@1.0.4","dist":{"shasum":"27c43bd2806141148224698c5f404fecae4bca98","tarball":"http://registry.npmjs.org/yargs/-/yargs-1.0.4.tgz"},"_from":".","_npmVersion":"1.3.14","_npmUser":{"name":"chevex","email":"alex.ford@codetunnel.com"},"maintainers":[{"name":"chevex","email":"alex.ford@codetunnel.com"}],"directories":{}},"1.0.5":{"name":"yargs","version":"1.0.5","description":"Light-weight option parsing with an argv hash. No optstrings attached.","main":"./index.js","dependencies":{"minimist":"~0.0.1"},"devDependencies":{"hashish":"~0.0.4","tap":"~0.4.0"},"scripts":{"test":"tap ./test/*.js"},"repository":{"type":"git","url":"http://github.com/chevex/yargs.git"},"keywords":["argument","args","option","parser","parsing","cli","command"],"author":{"name":"Alex Ford","email":"Alex.Ford@CodeTunnel.com","url":"forked from James Halliday"},"license":"MIT/X11","engine":{"node":">=0.4"},"bugs":{"url":"https://github.com/chevex/yargs/issues"},"homepage":"https://github.com/chevex/yargs","_id":"yargs@1.0.5","dist":{"shasum":"b5e25592d93554bc02516eaea92e66a4b5a3b793","tarball":"http://registry.npmjs.org/yargs/-/yargs-1.0.5.tgz"},"_from":".","_npmVersion":"1.3.14","_npmUser":{"name":"chevex","email":"alex.ford@codetunnel.com"},"maintainers":[{"name":"chevex","email":"alex.ford@codetunnel.com"}],"directories":{}},"1.0.6":{"name":"yargs","version":"1.0.6","description":"Light-weight option parsing with an argv hash. No optstrings attached.","main":"./index.js","dependencies":{"minimist":"~0.0.1"},"devDependencies":{"hashish":"~0.0.4","tap":"~0.4.0"},"scripts":{"test":"tap ./test/*.js"},"repository":{"type":"git","url":"http://github.com/chevex/yargs.git"},"keywords":["argument","args","option","parser","parsing","cli","command"],"author":{"name":"Alex Ford","email":"Alex.Ford@CodeTunnel.com","url":"forked from James Halliday"},"license":"MIT/X11","engine":{"node":">=0.4"},"bugs":{"url":"https://github.com/chevex/yargs/issues"},"homepage":"https://github.com/chevex/yargs","_id":"yargs@1.0.6","dist":{"shasum":"a5b4cbb81f0ad8586ce33ee1dfff956fb431fc2c","tarball":"http://registry.npmjs.org/yargs/-/yargs-1.0.6.tgz"},"_from":".","_npmVersion":"1.3.14","_npmUser":{"name":"chevex","email":"alex.ford@codetunnel.com"},"maintainers":[{"name":"chevex","email":"alex.ford@codetunnel.com"}],"directories":{}},"1.0.7":{"name":"yargs","version":"1.0.7","description":"Light-weight option parsing with an argv hash. No optstrings attached.","main":"./index.js","dependencies":{"minimist":"~0.0.1"},"devDependencies":{"hashish":"~0.0.4","tap":"~0.4.0"},"scripts":{"test":"tap ./test/*.js"},"repository":{"type":"git","url":"http://github.com/chevex/yargs.git"},"keywords":["argument","args","option","parser","parsing","cli","command"],"author":{"name":"Alex Ford","email":"Alex.Ford@CodeTunnel.com","url":"forked from James Halliday"},"license":"MIT/X11","engine":{"node":">=0.4"},"bugs":{"url":"https://github.com/chevex/yargs/issues"},"homepage":"https://github.com/chevex/yargs","_id":"yargs@1.0.7","dist":{"shasum":"0903eddecd3852654b0f6e0e9a4e1332c8c3cf4a","tarball":"http://registry.npmjs.org/yargs/-/yargs-1.0.7.tgz"},"_from":".","_npmVersion":"1.3.14","_npmUser":{"name":"chevex","email":"alex.ford@codetunnel.com"},"maintainers":[{"name":"chevex","email":"alex.ford@codetunnel.com"}],"directories":{}},"1.0.8":{"name":"yargs","version":"1.0.8","description":"Light-weight option parsing with an argv hash. No optstrings attached.","main":"./index.js","dependencies":{"minimist":"~0.0.1"},"devDependencies":{"hashish":"~0.0.4","tap":"~0.4.0"},"scripts":{"test":"tap ./test/*.js"},"repository":{"type":"git","url":"http://github.com/chevex/yargs.git"},"keywords":["argument","args","option","parser","parsing","cli","command"],"author":{"name":"Alex Ford","email":"Alex.Ford@CodeTunnel.com","url":"forked from James Halliday"},"license":"MIT/X11","engine":{"node":">=0.4"},"bugs":{"url":"https://github.com/chevex/yargs/issues"},"homepage":"https://github.com/chevex/yargs","_id":"yargs@1.0.8","dist":{"shasum":"9cc288de5c5fd30f10cfaf9db003bd4de485063c","tarball":"http://registry.npmjs.org/yargs/-/yargs-1.0.8.tgz"},"_from":".","_npmVersion":"1.3.14","_npmUser":{"name":"chevex","email":"alex.ford@codetunnel.com"},"maintainers":[{"name":"chevex","email":"alex.ford@codetunnel.com"}],"directories":{}},"1.0.9":{"name":"yargs","version":"1.0.9","description":"Light-weight option parsing with an argv hash. No optstrings attached.","main":"./index.js","dependencies":{"minimist":"~0.0.1"},"devDependencies":{"hashish":"~0.0.4","tap":"~0.4.0"},"scripts":{"test":"tap ./test/*.js"},"repository":{"type":"git","url":"http://github.com/chevex/yargs.git"},"keywords":["argument","args","option","parser","parsing","cli","command"],"author":{"name":"Alex Ford","email":"Alex.Ford@CodeTunnel.com","url":"forked from James Halliday"},"license":"MIT/X11","engine":{"node":">=0.4"},"bugs":{"url":"https://github.com/chevex/yargs/issues"},"homepage":"https://github.com/chevex/yargs","_id":"yargs@1.0.9","dist":{"shasum":"f48e3ee9279a4accaff7810ce127eed1fcc87377","tarball":"http://registry.npmjs.org/yargs/-/yargs-1.0.9.tgz"},"_from":".","_npmVersion":"1.3.15","_npmUser":{"name":"chevex","email":"alex.ford@codetunnel.com"},"maintainers":[{"name":"chevex","email":"alex.ford@codetunnel.com"}],"directories":{}},"1.0.10":{"name":"yargs","version":"1.0.10","description":"Light-weight option parsing with an argv hash. No optstrings attached.","main":"./index.js","dependencies":{"minimist":"~0.0.1"},"devDependencies":{"hashish":"~0.0.4","tap":"~0.4.0"},"scripts":{"test":"tap ./test/*.js"},"repository":{"type":"git","url":"http://github.com/chevex/yargs.git"},"keywords":["argument","args","option","parser","parsing","cli","command"],"author":{"name":"Alex Ford","email":"Alex.Ford@CodeTunnel.com","url":"forked from James Halliday"},"license":"MIT/X11","engine":{"node":">=0.4"},"bugs":{"url":"https://github.com/chevex/yargs/issues"},"homepage":"https://github.com/chevex/yargs","_id":"yargs@1.0.10","dist":{"shasum":"081f03b4a35fb33ba40d79f71feb7c5cfb6bcc2a","tarball":"http://registry.npmjs.org/yargs/-/yargs-1.0.10.tgz"},"_from":".","_npmVersion":"1.3.15","_npmUser":{"name":"chevex","email":"alex.ford@codetunnel.com"},"maintainers":[{"name":"chevex","email":"alex.ford@codetunnel.com"}],"directories":{}},"1.0.11":{"name":"yargs","version":"1.0.11","description":"Light-weight option parsing with an argv hash. No optstrings attached.","main":"./index.js","dependencies":{"minimist":"~0.0.1"},"devDependencies":{"hashish":"~0.0.4","tap":"~0.4.0"},"scripts":{"test":"tap ./test/*.js"},"repository":{"type":"git","url":"http://github.com/chevex/yargs.git"},"keywords":["argument","args","option","parser","parsing","cli","command"],"author":{"name":"Alex Ford","email":"Alex.Ford@CodeTunnel.com","url":"forked from James Halliday"},"license":"MIT/X11","engine":{"node":">=0.4"},"bugs":{"url":"https://github.com/chevex/yargs/issues"},"homepage":"https://github.com/chevex/yargs","_id":"yargs@1.0.11","dist":{"shasum":"673d261da3a0fb0fb6cb12e99ca9df4a0026b41c","tarball":"http://registry.npmjs.org/yargs/-/yargs-1.0.11.tgz"},"_from":".","_npmVersion":"1.3.15","_npmUser":{"name":"chevex","email":"alex.ford@codetunnel.com"},"maintainers":[{"name":"chevex","email":"alex.ford@codetunnel.com"}],"directories":{}},"1.0.12":{"name":"yargs","version":"1.0.12","description":"Light-weight option parsing with an argv hash. No optstrings attached.","main":"./index.js","dependencies":{"minimist":"~0.0.1"},"devDependencies":{"hashish":"~0.0.4","tap":"~0.4.0"},"scripts":{"test":"tap ./test/*.js"},"repository":{"type":"git","url":"http://github.com/chevex/yargs.git"},"keywords":["argument","args","option","parser","parsing","cli","command"],"author":{"name":"Alex Ford","email":"Alex.Ford@CodeTunnel.com","url":"forked from James Halliday"},"license":"MIT/X11","engine":{"node":">=0.4"},"bugs":{"url":"https://github.com/chevex/yargs/issues"},"homepage":"https://github.com/chevex/yargs","_id":"yargs@1.0.12","dist":{"shasum":"c1f396435efd86b17943f9b6160303dd1cf74a44","tarball":"http://registry.npmjs.org/yargs/-/yargs-1.0.12.tgz"},"_from":".","_npmVersion":"1.3.15","_npmUser":{"name":"chevex","email":"alex.ford@codetunnel.com"},"maintainers":[{"name":"chevex","email":"alex.ford@codetunnel.com"}],"directories":{}},"1.0.13":{"name":"yargs","version":"1.0.13","description":"Light-weight option parsing with an argv hash. No optstrings attached.","main":"./index.js","dependencies":{"minimist":"~0.0.1"},"devDependencies":{"hashish":"~0.0.4","tap":"~0.4.0"},"scripts":{"test":"tap ./test/*.js"},"repository":{"type":"git","url":"http://github.com/chevex/yargs.git"},"keywords":["argument","args","option","parser","parsing","cli","command"],"author":{"name":"Alex Ford","email":"Alex.Ford@CodeTunnel.com","url":"forked from James Halliday"},"license":"MIT/X11","engine":{"node":">=0.4"},"bugs":{"url":"https://github.com/chevex/yargs/issues"},"homepage":"https://github.com/chevex/yargs","_id":"yargs@1.0.13","dist":{"shasum":"8a9d0ecd81079d44dbb91281f17255ae31f1b3d3","tarball":"http://registry.npmjs.org/yargs/-/yargs-1.0.13.tgz"},"_from":".","_npmVersion":"1.3.26","_npmUser":{"name":"chevex","email":"alex.ford@codetunnel.com"},"maintainers":[{"name":"chevex","email":"alex.ford@codetunnel.com"}],"directories":{}},"1.0.15":{"name":"yargs","version":"1.0.15","description":"Light-weight option parsing with an argv hash. No optstrings attached.","main":"./index.js","dependencies":{"minimist":"~0.0.1"},"devDependencies":{"hashish":"~0.0.4","tap":"~0.4.0"},"scripts":{"test":"tap ./test/*.js"},"repository":{"type":"git","url":"http://github.com/chevex/yargs.git"},"keywords":["argument","args","option","parser","parsing","cli","command"],"author":{"name":"Alex Ford","email":"Alex.Ford@CodeTunnel.com","url":"forked from James Halliday"},"license":"MIT/X11","engine":{"node":">=0.4"},"bugs":{"url":"https://github.com/chevex/yargs/issues"},"homepage":"https://github.com/chevex/yargs","_id":"yargs@1.0.15","dist":{"shasum":"c0fe4988495615c98e51c12b700783aa3ee2c0f6","tarball":"http://registry.npmjs.org/yargs/-/yargs-1.0.15.tgz"},"_from":".","_npmVersion":"1.3.24","_npmUser":{"name":"chevex","email":"alex.ford@codetunnel.com"},"maintainers":[{"name":"chevex","email":"alex.ford@codetunnel.com"}],"directories":{}},"1.1.0":{"name":"yargs","version":"1.1.0","description":"Light-weight option parsing with an argv hash. No optstrings attached.","main":"./index.js","dependencies":{"minimist":"~0.0.1"},"devDependencies":{"hashish":"*","mocha":"*","chai":"*"},"scripts":{"test":"mocha -R nyan"},"repository":{"type":"git","url":"http://github.com/chevex/yargs.git"},"keywords":["argument","args","option","parser","parsing","cli","command"],"author":{"name":"Alex Ford","email":"Alex.Ford@CodeTunnel.com","url":"http://CodeTunnel.com"},"license":"MIT/X11","engine":{"node":">=0.4"},"bugs":{"url":"https://github.com/chevex/yargs/issues"},"homepage":"https://github.com/chevex/yargs","_id":"yargs@1.1.0","dist":{"shasum":"47631b24f96c2c15ebe555d250671ddbfd740c3a","tarball":"http://registry.npmjs.org/yargs/-/yargs-1.1.0.tgz"},"_from":".","_npmVersion":"1.3.26","_npmUser":{"name":"chevex","email":"alex.ford@codetunnel.com"},"maintainers":[{"name":"chevex","email":"alex.ford@codetunnel.com"}],"directories":{}},"1.1.1":{"name":"yargs","version":"1.1.1","description":"Light-weight option parsing with an argv hash. No optstrings attached.","main":"./index.js","dependencies":{"minimist":"~0.0.1"},"devDependencies":{"hashish":"*","mocha":"*","chai":"*"},"scripts":{"test":"mocha -R nyan"},"repository":{"type":"git","url":"http://github.com/chevex/yargs.git"},"keywords":["argument","args","option","parser","parsing","cli","command"],"author":{"name":"Alex Ford","email":"Alex.Ford@CodeTunnel.com","url":"http://CodeTunnel.com"},"license":"MIT/X11","engine":{"node":">=0.4"},"bugs":{"url":"https://github.com/chevex/yargs/issues"},"homepage":"https://github.com/chevex/yargs","_id":"yargs@1.1.1","dist":{"shasum":"3454e66c8877767b4450e5db92dc4067f3923539","tarball":"http://registry.npmjs.org/yargs/-/yargs-1.1.1.tgz"},"_from":".","_npmVersion":"1.3.26","_npmUser":{"name":"chevex","email":"alex.ford@codetunnel.com"},"maintainers":[{"name":"chevex","email":"alex.ford@codetunnel.com"}],"directories":{}},"1.1.2":{"name":"yargs","version":"1.1.2","description":"Light-weight option parsing with an argv hash. No optstrings attached.","main":"./index.js","dependencies":{"minimist":"~0.0.1"},"devDependencies":{"hashish":"*","mocha":"*","chai":"*"},"scripts":{"test":"mocha -R nyan"},"repository":{"type":"git","url":"http://github.com/chevex/yargs.git"},"keywords":["argument","args","option","parser","parsing","cli","command"],"author":{"name":"Alex Ford","email":"Alex.Ford@CodeTunnel.com","url":"http://CodeTunnel.com"},"license":"MIT/X11","engine":{"node":">=0.4"},"bugs":{"url":"https://github.com/chevex/yargs/issues"},"homepage":"https://github.com/chevex/yargs","_id":"yargs@1.1.2","dist":{"shasum":"fa6e6bc52e942ebeb4df88244f90bd64579080b8","tarball":"http://registry.npmjs.org/yargs/-/yargs-1.1.2.tgz"},"_from":".","_npmVersion":"1.3.26","_npmUser":{"name":"chevex","email":"alex.ford@codetunnel.com"},"maintainers":[{"name":"chevex","email":"alex.ford@codetunnel.com"}],"directories":{}},"1.1.3":{"name":"yargs","version":"1.1.3","description":"Light-weight option parsing with an argv hash. No optstrings attached.","main":"./index.js","dependencies":{"minimist":"~0.0.1"},"devDependencies":{"hashish":"*","mocha":"*","chai":"*"},"scripts":{"test":"mocha -R nyan"},"repository":{"type":"git","url":"http://github.com/chevex/yargs.git"},"keywords":["argument","args","option","parser","parsing","cli","command"],"author":{"name":"Alex Ford","email":"Alex.Ford@CodeTunnel.com","url":"http://CodeTunnel.com"},"license":"MIT/X11","engine":{"node":">=0.4"},"bugs":{"url":"https://github.com/chevex/yargs/issues"},"homepage":"https://github.com/chevex/yargs","_id":"yargs@1.1.3","dist":{"shasum":"c44ed2bb9c86d55b557f2179fea7c7013fe4c42a","tarball":"http://registry.npmjs.org/yargs/-/yargs-1.1.3.tgz"},"_from":".","_npmVersion":"1.3.26","_npmUser":{"name":"chevex","email":"alex.ford@codetunnel.com"},"maintainers":[{"name":"chevex","email":"alex.ford@codetunnel.com"}],"directories":{}},"1.2.0":{"name":"yargs","version":"1.2.0","description":"Light-weight option parsing with an argv hash. No optstrings attached.","main":"./index.js","dependencies":{"minimist":"~0.0.1"},"devDependencies":{"hashish":"*","mocha":"*","chai":"*"},"scripts":{"test":"mocha -R nyan"},"repository":{"type":"git","url":"http://github.com/chevex/yargs.git"},"keywords":["argument","args","option","parser","parsing","cli","command"],"author":{"name":"Alex Ford","email":"Alex.Ford@CodeTunnel.com","url":"http://CodeTunnel.com"},"license":"MIT/X11","engine":{"node":">=0.4"},"bugs":{"url":"https://github.com/chevex/yargs/issues"},"homepage":"https://github.com/chevex/yargs","_id":"yargs@1.2.0","dist":{"shasum":"2499eb5eb8c99fccb0586e7b0e73c441f0286ed7","tarball":"http://registry.npmjs.org/yargs/-/yargs-1.2.0.tgz"},"_from":".","_npmVersion":"1.4.4","_npmUser":{"name":"chevex","email":"alex.ford@codetunnel.com"},"maintainers":[{"name":"chevex","email":"alex.ford@codetunnel.com"}],"directories":{}},"1.2.1":{"name":"yargs","version":"1.2.1","description":"Light-weight option parsing with an argv hash. No optstrings attached.","main":"./index.js","dependencies":{"minimist":"~0.0.1"},"devDependencies":{"hashish":"*","mocha":"*","chai":"*"},"scripts":{"test":"mocha -R nyan"},"repository":{"type":"git","url":"http://github.com/chevex/yargs.git"},"keywords":["argument","args","option","parser","parsing","cli","command"],"author":{"name":"Alex Ford","email":"Alex.Ford@CodeTunnel.com","url":"http://CodeTunnel.com"},"license":"MIT/X11","engine":{"node":">=0.4"},"bugs":{"url":"https://github.com/chevex/yargs/issues"},"homepage":"https://github.com/chevex/yargs","_id":"yargs@1.2.1","dist":{"shasum":"4970c3df026bda60f02a6c213f96e2f4e5c6351a","tarball":"http://registry.npmjs.org/yargs/-/yargs-1.2.1.tgz"},"_from":".","_npmVersion":"1.4.4","_npmUser":{"name":"chevex","email":"alex.ford@codetunnel.com"},"maintainers":[{"name":"chevex","email":"alex.ford@codetunnel.com"}],"directories":{}},"1.2.2":{"name":"yargs","version":"1.2.2","description":"Light-weight option parsing with an argv hash. No optstrings attached.","main":"./index.js","dependencies":{"minimist":"~0.0.1"},"devDependencies":{"hashish":"*","mocha":"*","chai":"*"},"scripts":{"test":"mocha -R nyan"},"repository":{"type":"git","url":"http://github.com/chevex/yargs.git"},"keywords":["argument","args","option","parser","parsing","cli","command"],"author":{"name":"Alex Ford","email":"Alex.Ford@CodeTunnel.com","url":"http://CodeTunnel.com"},"license":"MIT/X11","engine":{"node":">=0.4"},"bugs":{"url":"https://github.com/chevex/yargs/issues"},"homepage":"https://github.com/chevex/yargs","_id":"yargs@1.2.2","_shasum":"36b364c8d72d1213b4f720d5cf716dfde4f0a113","_from":".","_npmVersion":"1.4.9","_npmUser":{"name":"chevex","email":"alex.ford@codetunnel.com"},"maintainers":[{"name":"chevex","email":"alex.ford@codetunnel.com"}],"dist":{"shasum":"36b364c8d72d1213b4f720d5cf716dfde4f0a113","tarball":"http://registry.npmjs.org/yargs/-/yargs-1.2.2.tgz"},"directories":{}},"1.2.3":{"name":"yargs","version":"1.2.3","description":"Light-weight option parsing with an argv hash. No optstrings attached.","main":"./index.js","dependencies":{"minimist":"~0.0.1"},"devDependencies":{"hashish":"*","mocha":"*","chai":"*"},"scripts":{"test":"mocha -R nyan"},"repository":{"type":"git","url":"http://github.com/chevex/yargs.git"},"keywords":["argument","args","option","parser","parsing","cli","command"],"author":{"name":"Alex Ford","email":"Alex.Ford@CodeTunnel.com","url":"http://CodeTunnel.com"},"license":"MIT/X11","engine":{"node":">=0.4"},"gitHead":"b61c69e5a92f37df43cc0d7e662c4625b9975864","bugs":{"url":"https://github.com/chevex/yargs/issues"},"homepage":"https://github.com/chevex/yargs","_id":"yargs@1.2.3","_shasum":"72b320b1f74dc576f03f4abfdf838ce7cce114c7","_from":".","_npmVersion":"1.4.14","_npmUser":{"name":"chevex","email":"alex.ford@codetunnel.com"},"maintainers":[{"name":"chevex","email":"alex.ford@codetunnel.com"}],"dist":{"shasum":"72b320b1f74dc576f03f4abfdf838ce7cce114c7","tarball":"http://registry.npmjs.org/yargs/-/yargs-1.2.3.tgz"},"directories":{}},"1.2.4":{"name":"yargs","version":"1.2.4","description":"Light-weight option parsing with an argv hash. No optstrings attached.","main":"./index.js","dependencies":{"minimist":"^0.1.0"},"devDependencies":{"hashish":"*","mocha":"*","chai":"*"},"scripts":{"test":"mocha -R nyan"},"repository":{"type":"git","url":"http://github.com/chevex/yargs.git"},"keywords":["argument","args","option","parser","parsing","cli","command"],"author":{"name":"Alex Ford","email":"Alex.Ford@CodeTunnel.com","url":"http://CodeTunnel.com"},"license":"MIT/X11","engine":{"node":">=0.4"},"gitHead":"91682b61bd3d9c1fcc5b095a96482d549718befa","bugs":{"url":"https://github.com/chevex/yargs/issues"},"homepage":"https://github.com/chevex/yargs","_id":"yargs@1.2.4","_shasum":"42e3ff286107aea90a1337a69dba81312712f88f","_from":".","_npmVersion":"1.4.14","_npmUser":{"name":"chevex","email":"alex.ford@codetunnel.com"},"maintainers":[{"name":"chevex","email":"alex.ford@codetunnel.com"}],"dist":{"shasum":"42e3ff286107aea90a1337a69dba81312712f88f","tarball":"http://registry.npmjs.org/yargs/-/yargs-1.2.4.tgz"},"directories":{}},"1.2.5":{"name":"yargs","version":"1.2.5","description":"Light-weight option parsing with an argv hash. No optstrings attached.","main":"./index.js","dependencies":{"minimist":"^0.1.0"},"devDependencies":{"hashish":"*","mocha":"*","chai":"*"},"scripts":{"test":"mocha -R nyan"},"repository":{"type":"git","url":"http://github.com/chevex/yargs.git"},"keywords":["argument","args","option","parser","parsing","cli","command"],"author":{"name":"Alex Ford","email":"Alex.Ford@CodeTunnel.com","url":"http://CodeTunnel.com"},"license":"MIT/X11","engine":{"node":">=0.4"},"gitHead":"fe001dca7d1746834019c842db32360a27802f40","bugs":{"url":"https://github.com/chevex/yargs/issues"},"homepage":"https://github.com/chevex/yargs","_id":"yargs@1.2.5","_shasum":"ba5a27901b8d53fa224faa67c6ed76d8c6e19476","_from":".","_npmVersion":"1.4.14","_npmUser":{"name":"chevex","email":"alex.ford@codetunnel.com"},"maintainers":[{"name":"chevex","email":"alex.ford@codetunnel.com"}],"dist":{"shasum":"ba5a27901b8d53fa224faa67c6ed76d8c6e19476","tarball":"http://registry.npmjs.org/yargs/-/yargs-1.2.5.tgz"},"directories":{}},"1.2.6":{"name":"yargs","version":"1.2.6","description":"Light-weight option parsing with an argv hash. No optstrings attached.","main":"./index.js","dependencies":{"minimist":"^0.1.0"},"devDependencies":{"hashish":"*","mocha":"*","chai":"*"},"scripts":{"test":"mocha -R nyan"},"repository":{"type":"git","url":"http://github.com/chevex/yargs.git"},"keywords":["argument","args","option","parser","parsing","cli","command"],"author":{"name":"Alex Ford","email":"Alex.Ford@CodeTunnel.com","url":"http://CodeTunnel.com"},"license":"MIT/X11","engine":{"node":">=0.4"},"gitHead":"ed1216f75be676bf5cbd7f26daf7ea4a2cb4a208","bugs":{"url":"https://github.com/chevex/yargs/issues"},"homepage":"https://github.com/chevex/yargs","_id":"yargs@1.2.6","_shasum":"9c7b4a82fd5d595b2bf17ab6dcc43135432fe34b","_from":".","_npmVersion":"1.4.14","_npmUser":{"name":"chevex","email":"alex.ford@codetunnel.com"},"maintainers":[{"name":"chevex","email":"alex.ford@codetunnel.com"}],"dist":{"shasum":"9c7b4a82fd5d595b2bf17ab6dcc43135432fe34b","tarball":"http://registry.npmjs.org/yargs/-/yargs-1.2.6.tgz"},"directories":{}},"1.3.0":{"name":"yargs","version":"1.3.0","description":"Light-weight option parsing with an argv hash. No optstrings attached.","main":"./index.js","dependencies":{"minimist":"^0.2.0"},"devDependencies":{"hashish":"*","mocha":"*","chai":"*"},"scripts":{"test":"mocha -R nyan"},"repository":{"type":"git","url":"http://github.com/chevex/yargs.git"},"keywords":["argument","args","option","parser","parsing","cli","command"],"author":{"name":"Alex Ford","email":"Alex.Ford@CodeTunnel.com","url":"http://CodeTunnel.com"},"license":"MIT/X11","engine":{"node":">=0.4"},"gitHead":"156b490561135ec1f3cb72d6000d1e54374e7005","bugs":{"url":"https://github.com/chevex/yargs/issues"},"homepage":"https://github.com/chevex/yargs","_id":"yargs@1.3.0","_shasum":"77f8faeead22db126925f13d5d513bbdac4c0085","_from":".","_npmVersion":"1.4.21","_npmUser":{"name":"chevex","email":"alex.ford@codetunnel.com"},"maintainers":[{"name":"chevex","email":"alex.ford@codetunnel.com"}],"dist":{"shasum":"77f8faeead22db126925f13d5d513bbdac4c0085","tarball":"http://registry.npmjs.org/yargs/-/yargs-1.3.0.tgz"},"directories":{}},"1.3.1":{"name":"yargs","version":"1.3.1","description":"Light-weight option parsing with an argv hash. No optstrings attached.","main":"./index.js","dependencies":{},"devDependencies":{"hashish":"*","mocha":"*","chai":"*"},"scripts":{"test":"mocha -R nyan"},"repository":{"type":"git","url":"http://github.com/chevex/yargs.git"},"keywords":["argument","args","option","parser","parsing","cli","command"],"author":{"name":"Alex Ford","email":"Alex.Ford@CodeTunnel.com","url":"http://CodeTunnel.com"},"license":"MIT/X11","engine":{"node":">=0.4"},"gitHead":"28a38053ef079f49aa84cff0da1ab6618f6effc3","bugs":{"url":"https://github.com/chevex/yargs/issues"},"homepage":"https://github.com/chevex/yargs","_id":"yargs@1.3.1","_shasum":"4d1a24962724cca9d4dcb3d60712467bf3645e5b","_from":".","_npmVersion":"1.4.21","_npmUser":{"name":"chevex","email":"alex.ford@codetunnel.com"},"maintainers":[{"name":"chevex","email":"alex.ford@codetunnel.com"}],"dist":{"shasum":"4d1a24962724cca9d4dcb3d60712467bf3645e5b","tarball":"http://registry.npmjs.org/yargs/-/yargs-1.3.1.tgz"},"directories":{}}},"readme":"yargs\u000a========\u000a\u000aYargs be a node.js library fer hearties tryin' ter parse optstrings against their will where even the boo box be not enough to coerce them. This here module is fer scallywags lookin' ter plunder all the sunken -shipz of their --treasures thru program usage but be tired of optstrings disincling to acquiesce to yer requests.\u000a\u000aWith yargs, ye be havin' a map that leads straight to yer treasure! Treasure of course, being a simple option hash.\u000a\u000a[![Build Status](https://travis-ci.org/chevex/yargs.png)](https://travis-ci.org/chevex/yargs)\u000a[![Dependency Status](https://gemnasium.com/chevex/yargs.png)](https://gemnasium.com/chevex/yargs)\u000a[![NPM version](https://badge.fury.io/js/yargs.png)](http://badge.fury.io/js/yargs)\u000a\u000a> ~~NOTE: Yargs is a fork of [optimist](https://github.com/substack/node-optimist) by [substack (James Halliday)](https://github.com/substack). It is obvious that substack is stretched pretty thin maintaining over 300 modules on npm at the time of this writing. So rather than complain in the project issue tracker I thought I'd just pick up the torch and maintain a proper fork. Currently the project is totally backward compatible with optimist but this may change in the future (if it does I will update this notice to inform you of this). For now though, enjoy optimist with about 5 months worth of fixes and updates rolled in, most of them pulled from optimist's own [stale pull requests](https://github.com/substack/node-optimist/pulls).~~\u000a\u000a> UPDATE: Yargs is now the official successor to optimist. Please feel free to submit issues and pull requests. While I personally don't have the time to pore over all the issues and fix all of them on a regular basis, I'm more than happy to look over pull requests, test them, and merge them in. If you'd like to contribute and don't know where to start, have a look at [the issue list](https://github.com/chevex/yargs/issues) :)\u000a\u000aexamples\u000a========\u000a\u000aWith yargs, the options be just a hash! No optstrings be attached.\u000a-------------------------------------------------------------------\u000a\u000axup.js:\u000a\u000a````javascript\u000a#!/usr/bin/env node\u000avar argv = require('yargs').argv;\u000a\u000aif (argv.rif - 5 * argv.xup > 7.138) {\u000a    console.log('Plunder more riffiwobbles!');\u000a}\u000aelse {\u000a    console.log('Drop the xupptumblers!');\u000a}\u000a````\u000a\u000a***\u000a\u000a    $ ./xup.js --rif=55 --xup=9.52\u000a    Plunder more riffiwobbles!\u000a    \u000a    $ ./xup.js --rif 12 --xup 8.1\u000a    Drop the xupptumblers!\u000a\u000a![Joe was one optimistic pirate.](http://i.imgur.com/4WFGVJ9.png)\u000a\u000aBut don' walk the plank jus' yet! Ther' be more! Ye can do short options:\u000a-------------------------------------------------\u000a \u000ashort.js:\u000a\u000a````javascript\u000a#!/usr/bin/env node\u000avar argv = require('yargs').argv;\u000aconsole.log('(%d,%d)', argv.x, argv.y);\u000a````\u000a\u000a***\u000a\u000a    $ ./short.js -x 10 -y 21\u000a    (10,21)\u000a\u000aAnd gold doubooleans, both long an' short (an' grouped!):\u000a----------------------------------\u000a\u000abool.js:\u000a\u000a````javascript\u000a#!/usr/bin/env node\u000avar util = require('util');\u000avar argv = require('yargs').argv;\u000a\u000aif (argv.s) {\u000a    util.print(argv.fr ? 'Le perroquet dit: ' : 'The parrot says: ');\u000a}\u000aconsole.log(\u000a    (argv.fr ? 'couac' : 'squawk') + (argv.p ? '!' : '')\u000a);\u000a````\u000a\u000a***\u000a\u000a    $ ./bool.js -s\u000a    The parrot says: squawk\u000a    \u000a    $ ./bool.js -sp\u000a    The parrot says: squawk!\u000a\u000a    $ ./bool.js -sp --fr\u000a    Le perroquet dit: couac!\u000a\u000aAnd non-hyphenated options too! Just use `argv._`!\u000a-------------------------------------------------\u000a \u000anonopt.js:\u000a\u000a````javascript\u000a#!/usr/bin/env node\u000avar argv = require('yargs').argv;\u000aconsole.log('(%d,%d)', argv.x, argv.y);\u000aconsole.log(argv._);\u000a````\u000a\u000a***\u000a\u000a    $ ./nonopt.js -x 6.82 -y 3.35 rum\u000a    (6.82,3.35)\u000a    [ 'rum' ]\u000a    \u000a    $ ./nonopt.js \"me hearties\" -x 0.54 yo -y 1.12 ho\u000a    (0.54,1.12)\u000a    [ 'me hearties', 'yo', 'ho' ]\u000a\u000aYargs even counts yer gold doubooleans!\u000a----------------------------------------------------------------------\u000a\u000acount.js\u000a\u000a````javascript\u000a#!/usr/bin/env node\u000avar argv = require('yargs')\u000a    .count('verbose')\u000a    .alias('v', 'verbose')\u000a    .argv;\u000a\u000aVERBOSE_LEVEL = argv.verbose;\u000a\u000afunction WARN()  { VERBOSE_LEVEL >= 0 && console.log.apply(console, arguments); }\u000afunction INFO()  { VERBOSE_LEVEL >= 1 && console.log.apply(console, arguments); }\u000afunction DEBUG() { VERBOSE_LEVEL >= 2 && console.log.apply(console, arguments); }\u000a\u000aWARN(\"Showing only important stuff\");\u000aINFO(\"Showing semi-mportant stuff too\");\u000aDEBUG(\"Extra chatty mode\");\u000a````\u000a\u000a***\u000a    $ node count.js\u000a    Showing only important stuff\u000a\u000a    $ node count.js -v\u000a    Showing only important stuff\u000a    Showing semi-important stuff too\u000a\u000a    $ node count.js -vv\u000a    Showing only important stuff\u000a    Showing semi-important stuff too\u000a    Extra chatty mode\u000a\u000a    $ node count.js -v --verbose\u000a    Showing only important stuff\u000a    Showing semi-important stuff too\u000a    Extra chatty mode\u000a\u000aTell yer friends how ter use yer options and make demands from yer enemies.\u000a-------------------------------------------------\u000a\u000adivide.js:\u000a\u000a````javascript\u000a#!/usr/bin/env node\u000avar argv = require('yargs')\u000a    .usage('Usage: $0 -x [num] -y [num]')\u000a    .demand(['x','y'])\u000a    .argv;\u000a\u000aconsole.log(argv.x / argv.y);\u000a````\u000a\u000a***\u000a \u000a    $ ./divide.js -x 55 -y 11\u000a    5\u000a    \u000a    $ node ./divide.js -x 4.91 -z 2.51\u000a    Usage: node ./divide.js -x [num] -y [num]\u000a\u000a    Options:\u000a      -x  [required]\u000a      -y  [required]\u000a\u000a    Missing required arguments: y\u000a\u000aAfter yer demands have been met, demand more! Ask for non-hypenated arguments!\u000a-----------------------------------------\u000a\u000ademand_count.js:\u000a\u000a````javascript\u000a#!/usr/bin/env node\u000avar argv = require('yargs')\u000a    .demand(2)\u000a    .argv;\u000aconsole.dir(argv)\u000a````\u000a\u000a***\u000a\u000a\u0009$ ./demand_count.js a\u000a\u0009Not enough arguments, expected 2, but only found 1\u000a\u0009$ ./demand_count.js a b\u000a\u0009{ _: [ 'a', 'b' ], '$0': 'node ./demand_count.js' }\u000a\u0009$ ./demand_count.js a b c\u000a\u0009{ _: [ 'a', 'b', 'c' ], '$0': 'node ./demand_count.js' }\u000a\u000aEVEN MORE SHIVER ME TIMBERS!\u000a------------------\u000a\u000adefault_singles.js:\u000a\u000a````javascript\u000a#!/usr/bin/env node\u000avar argv = require('yargs')\u000a    .default('x', 10)\u000a    .default('y', 10)\u000a    .argv\u000a;\u000aconsole.log(argv.x + argv.y);\u000a````\u000a\u000a***\u000a\u000a    $ ./default_singles.js -x 5\u000a    15\u000a\u000adefault_hash.js:\u000a\u000a````javascript\u000a#!/usr/bin/env node\u000avar argv = require('yargs')\u000a    .default({ x : 10, y : 10 })\u000a    .argv\u000a;\u000aconsole.log(argv.x + argv.y);\u000a````\u000a\u000a***\u000a\u000a    $ ./default_hash.js -y 7\u000a    17\u000a\u000aAnd if ye really want ter get all descriptive about it...\u000a---------------------------------------------------------\u000a\u000aboolean_single.js\u000a\u000a````javascript\u000a#!/usr/bin/env node\u000avar argv = require('yargs')\u000a    .boolean('v')\u000a    .argv\u000a;\u000aconsole.dir(argv.v);\u000aconsole.dir(argv._);\u000a````\u000a\u000a***\u000a\u000a    $ ./boolean_single.js -v \"me hearties\" yo ho\u000a    true\u000a    [ 'me hearties', 'yo', 'ho' ]\u000a    \u000a\u000aboolean_double.js\u000a\u000a````javascript\u000a#!/usr/bin/env node\u000avar argv = require('yargs')\u000a    .boolean(['x','y','z'])\u000a    .argv\u000a;\u000aconsole.dir([ argv.x, argv.y, argv.z ]);\u000aconsole.dir(argv._);\u000a````\u000a\u000a***\u000a\u000a    $ ./boolean_double.js -x -z one two three\u000a    [ true, false, true ]\u000a    [ 'one', 'two', 'three' ]\u000a\u000aYargs is here ter help ye...\u000a---------------------------\u000a\u000aYe can describe parameters fer help messages and set aliases. Yargs figures\u000aout how ter format a handy help string automatically.\u000a\u000aline_count.js\u000a\u000a````javascript\u000a#!/usr/bin/env node\u000avar argv = require('yargs')\u000a    .usage('Count the lines in a file.\\nUsage: $0')\u000a    .example('$0 -f', 'count the lines in the given file')\u000a    .demand('f')\u000a    .alias('f', 'file')\u000a    .describe('f', 'Load a file')\u000a    .argv\u000a;\u000a\u000avar fs = require('fs');\u000avar s = fs.createReadStream(argv.file);\u000a\u000avar lines = 0;\u000as.on('data', function (buf) {\u000a    lines += buf.toString().match(/\\n/g).length;\u000a});\u000a\u000as.on('end', function () {\u000a    console.log(lines);\u000a});\u000a````\u000a\u000a***\u000a\u000a    $ node line_count.js\u000a    Count the lines in a file.\u000a    Usage: node ./line_count.js\u000a\u000a    Examples:\u000a      node ./line_count.js -f   count the lines in the given file\u000a\u000a    Options:\u000a      -f, --file  Load a file  [required]\u000a\u000a    Missing required arguments: f\u000a\u000a    $ node line_count.js --file line_count.js \u000a    20\u000a    \u000a    $ node line_count.js -f line_count.js \u000a    20\u000a\u000amethods\u000a=======\u000a\u000aBy itself,\u000a\u000a````javascript\u000arequire('yargs').argv\u000a`````\u000a\u000awill use `process.argv` array to construct the `argv` object.\u000a\u000aYou can pass in the `process.argv` yourself:\u000a\u000a````javascript\u000arequire('yargs')([ '-x', '1', '-y', '2' ]).argv\u000a````\u000a\u000aor use .parse() to do the same thing:\u000a\u000a````javascript\u000arequire('yargs').parse([ '-x', '1', '-y', '2' ])\u000a````\u000a\u000aThe rest of these methods below come in just before the terminating `.argv`.\u000a\u000a.alias(key, alias)\u000a------------------\u000a\u000aSet key names as equivalent such that updates to a key will propagate to aliases\u000aand vice-versa.\u000a\u000aOptionally `.alias()` can take an object that maps keys to aliases.\u000aEach key of this object should be the canonical version of the option, and each\u000avalue should be a string or an array of strings.\u000a\u000a.default(key, value)\u000a--------------------\u000a\u000aSet `argv[key]` to `value` if no option was specified on `process.argv`.\u000a\u000aOptionally `.default()` can take an object that maps keys to default values.\u000a\u000a.demand(key, [msg | boolean])\u000a-----------------------------\u000a.require(key, [msg | boolean])\u000a------------------------------\u000a.required(key, [msg | boolean])\u000a-------------------------------\u000a\u000aIf `key` is a string, show the usage information and exit if `key` wasn't\u000aspecified in `process.argv`.\u000a\u000aIf `key` is a number, demand at least as many non-option arguments, which show\u000aup in `argv._`.\u000a\u000aIf `key` is an Array, demand each element.\u000a\u000aIf a `msg` string is given, it will be printed when the argument is missing,\u000ainstead of the standard error message. This is especially helpful for the non-option arguments in `argv._`.\u000a\u000aIf a `boolean` value is given, it controls whether the option is demanded;\u000athis is useful when using `.options()` to specify comman
108 error     at Object.parse (native)
108 error     at RegClient.<anonymous> (C:\Program Files\nodejs\node_modules\npm\node_modules\npm-registry-client\lib\request.js:266:23)
108 error     at Request._callback (C:\Program Files\nodejs\node_modules\npm\node_modules\npm-registry-client\lib\request.js:238:65)
108 error     at Request.self.callback (C:\Program Files\nodejs\node_modules\npm\node_modules\request\request.js:123:22)
108 error     at Request.emit (events.js:98:17)
108 error     at Request.<anonymous> (C:\Program Files\nodejs\node_modules\npm\node_modules\request\request.js:893:14)
108 error     at Request.emit (events.js:117:20)
108 error     at IncomingMessage.<anonymous> (C:\Program Files\nodejs\node_modules\npm\node_modules\request\request.js:844:12)
108 error     at IncomingMessage.emit (events.js:117:20)
108 error     at _stream_readable.js:943:16
109 error If you need help, you may report this *entire* log,
109 error including the npm and node versions, at:
109 error     <http://github.com/npm/npm/issues>
110 error System Windows_NT 6.1.7601
111 error command "C:\\Program Files\\nodejs\\\\node.exe" "C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js" "install" "-g" "css2stylus"
112 error cwd C:\wamp\www\pagina\css
113 error node -v v0.10.31
114 error npm -v 1.4.23
115 error type unexpected_eos
116 verbose exit [ 1, true ]
